: ServiceImplementation::Class
? Реализация сервиса
= ServicePrim::Class

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Параметры стереотипа
a f
/ - тип абстракции

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Функции стереотипа

%f _st_space_key
	SHD


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Унаследованная реализация

// перекрытие базового стереотипа Delphi интерфейсы и реализация::MDAGenerator
%f _DoSpell
//#UC START# *4B2A19E3038Bfor5502BADD01CB*
	%S%[inherited]
//#UC END# *4B2A19E3038Bfor5502BADD01CB*

// перекрытие базового стереотипа ServicePrim::Class
%f _AfterClassSpell
//#UC START# *5502CBD4031Efor5502BADD01CB*
	%S%[inherited]
//#UC END# *5502CBD4031Efor5502BADD01CB*

// перекрытие базового стереотипа ServicePrim::Class
%f _BeforeClassSpell
//#UC START# *5502C6A200F5for5502BADD01CB*
	&lt;{}{%CC=Dependency&%CS=implements}\
	%C%T#f_CheckFacet()\

//	%f_warning(%C%TN)\
//	%f_warning(%C%T%{Facet}N)\
//	%f_warning(%C%T%{Facet}U)\

	[{"%C%T%{Facet}N"!=""}\
	%S%f_make_accessable(%C%T%{Facet}U)\
	%S%f_add_realized(%C%T%{Facet}U)\
	]\
	&gt;\

	%S%f_add_operation(%SU_Ini_Reg_Class,ini,bind (),Op_Instance)\
	%{Op_Instance}%f_set_documentation(Регистрация %SN)\
	%{Op_Instance}%f_set_abstraction_type(final)\
	%{Op_Instance}%f_set_visibility_type(PrivateAccess)\
	%{Op_Instance}%f_set_uc_content(intf.pas,,\
	&lt;{\n}{%CC=Dependency&%CS=implements}\
	 %f_pas_TypeName(%C%T).Instance.Alien := %f_pas_TypeName(%S).Instance;\
	&gt;\
	)\

	%S%[inherited]
//#UC END# *5502C6A200F5for5502BADD01CB*

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Вложенные стереотипы

: ServiceImplementation::Class::implements::ClassDependency
? Указание, что реализуется
= Delphi интерфейсы и реализация::MDAGenerator

// Генераторы
// Генерация модели в MDKnow
+ wiki
//#UC START# *46E6D4BB0339for5502BC8E029A*
//#UC END# *46E6D4BB0339for5502BC8E029A*

// Родные Delphi интерфейсы (.pas)
+ intf.pas
R  
//#UC START# *470F1571031Cfor5502BC8E029A*
//#UC END# *470F1571031Cfor5502BC8E029A*

// Реализация на Delphi(.pas)
+ impl.pas
R  
//#UC START# *470F15B800CBfor5502BC8E029A*
//#UC END# *470F15B800CBfor5502BC8E029A*

// Вторая интерфейсная секция стереотипа. Например реализация свойств класса.
+ intf2.pas
R  
//#UC START# *477398E501C0for5502BC8E029A*
//#UC END# *477398E501C0for5502BC8E029A*

// 3-я секция интерфейса. Например поле для свойства.
+ intf3.pas
R  
//#UC START# *4774D2A20372for5502BC8E029A*
//#UC END# *4774D2A20372for5502BC8E029A*

// Генератор файлов форм (.dfm)
+ dfm
R  
//#UC START# *49F5795900ECfor5502BC8E029A*
//#UC END# *49F5795900ECfor5502BC8E029A*

// Скрипты TC (.sd)
+ sd
R  
//#UC START# *4DE79AFC0030for5502BC8E029A*
//#UC END# *4DE79AFC0030for5502BC8E029A*

// Хак для [$281531116]
+ link_to_requests_hack
//#UC START# *4E65F581015Afor5502BC8E029A*
//#UC END# *4E65F581015Afor5502BC8E029A*

// Функции стереотипа
%f _st_space_key
	SHD


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Унаследованная реализация

// реализация абстрактного стереотипа Документация::MDAGenerator
// проверка ограничений накладываемых на элемент
%t _constraint
//#UC START# *4704C0E30186for5502BC8E029A*
c          {}
r {""=""}: {}
//#UC END# *4704C0E30186for5502BC8E029A*

// реализация абстрактного стереотипа Документация::MDAGenerator
// выводит описание элемента (операция, атрибут) в wiki
%f _wiki_child_kind
//#UC START# *4705CBD6003Efor5502BC8E029A*
//#UC END# *4705CBD6003Efor5502BC8E029A*

// реализация абстрактного стереотипа Документация::MDAGenerator
// вывод описание авто-генерируемых методов в wiki
%f _wiki_up_add_gen
//#UC START# *470484D50138for5502BC8E029A*
//#UC END# *470484D50138for5502BC8E029A*


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

