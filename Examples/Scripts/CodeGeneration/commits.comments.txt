CodeGen65.ms.script
- для детей вызываем текущий генератор, а не то что подали "сверху".
- зачищаем текущий генератор.
- более понятно выводи имя "текущего генератора".
- инициализируем "текущий генератор".
- пересортировываем код.
- вводим понятие "текущего генератора".
- ещё тест. Тут введём понятие "текущего генератора".
CodeGen64.ms.script
- подключаем нашу "объектную" обвязку.
- ещё тест. Тут будем подключать нашу "объектную" обвязку.
Point96.ms.script
- вводим понятие STACK_CHANGING_MACRO.
- указываем стереотип.
- используем понятие __MACRO.
- доопределяем понятие __MACRO.
- переформатируем код.
- вводим понятие __MACRO.
- убираем ненужные USES.
- убираем ненужные USES.
- вводим словарь implementation.ms.dict.
- используем словарь Documentation.ms.dict.
- используем словарь Object.ms.dict.
- выделяем словарь Object.ms.dict.
- ещё тест. Затащим к себе всю "объектную" прослойку.
CodeGen63.ms.script
- избавляемся от использования Addr.
- вводим метод CallGensList.
- убираем "лишние" переменные.
- убираем использование "лишних" переменных.
- запускаем все тесты.
- ещё тест. Тут будем избавляться от Addr там где можно передать список слов, а не массив.
CodeGen62.ms.script
- правим условие проверки IsModelElement. Так правильнее вообще говоря.
- экранируем web-символы.
- вводим понятие ENGINE_WORD.
- даём ссылку на ОПЗ в wiki.
- запускаем все тесты.
- используем оператор =/=.
- вводим оператор =/=.
- используем словарь Documentation.ms.dict в core.ms.dict.
- используем !==.
- используем еврейско-арабское присваивание, чтобы не экранировать web-символы.
- запускаем РЕАЛЬНО ВСЕ тесты.
- запускаем все тесты.
- определяем понятие GetRefDeepestFromLeft.
- добавляем словарь RefDeepest.ms.dict.
- вводим понятие .Name.
- вводим понятие this.method.addr.
- запускаем тесты.
- используем понятие Addr.
- определяем понятие Addr.
- определяем понятие GetRefFromLeft.
- пишем документацию.
- добавляем словарь NoStrangeSymbols.ms.dict.
- добавляем понятие LVALUE.
- используем Literal вместо "закорюк".
- вводим понятие LVALUE_MOD.
- используем понятие REF.
- добавляем понятие REF.
- определяем тип Sequence.
- пишем документацию.
- пишем документацию.
- используем словарь Documentation.ms.dict в NoCapsLock.ms.dict.
- используем словарь NoCapsLock.ms.dict в Exports.
- дописываем документацию.
- включаем словарь Documentation.ms.dict в params.ms.dict.
- перетряхиваем зависимости.
- добавляем словарь Literal.ms.dict.
- запускаем все тесты.
- добавляем словарь Documentation.ms.dict.
- ещё тест. Тут будем избавляться ещё от "закорюк".
CodeGen61.ms.script
- добавляем генератор .h.
- декорируем.
- декорируем.
- используем понятие .Parents.
- вводим понятие .Parents.
- убираем закомментированный код.
- правильнее отфильтровываем элементы модели.
- правильнее отфильтровываем элементы модели.
- фильтруем родителей элемента.
- выводим родителей элемента.
- Выводим стереотип элемента, рекурсивно.
- Выводим стереотип стереотипа стереотипа стереотипа стереотипа стереотипа элемента.
- Выводим стереотип стереотипа стереотипа стереотипа стереотипа элемента.
- Выводим стереотип стереотипа стереотипа стереотипа элемента.
- Выводим стереотип стереотипа стереотипа элемента.
- Выводим стереотип стереотипа элемента.
- по-другому выводим имя стереотипа элемента.
- ещё тест. Тут мы немножко поиграемся со списками и итераторами.
CodeGen60.ms.script
- экранируем web-символы.
- вычищаем отладочную печать.
- используем генератор c++.
- добавляем генератор c++.
- перемещаем CallGens в "правильное место".
- дописываем документацию.
- запускаем список генераторов на списке "рутовых элементов" модели.
- вычищаем закомментированный код и дописываем документацию.
- дописываем документацию.
- дописываем документацию.
- итерируем по списку генераторов.
- форматируем код и дописываем документацию.
- используем итератор.
- вычищаем тестовую обвязку.
- дописываем документацию.
- дописываем документацию.
- правим документацию.
- дописываем документацию.
- возвращаемся к исходному виду.
- возвращаемся к исходному виду.
- правим документацию.
- заменяем ::: на FieldByNameDeepest.
- убираем закомментированный код.
- эксперементируем.
- эксперементируем.
- эксперементируем.
- похоже добились того, чего хотели. Получаем слово по ссылке, лежащей в переменной.
- заготовочка. |RefDeepest.
- заготовочка.
- заготовочка.
- заготовочка.
- заготовочка.
- заготовочка :::.
- заготовочка.
- заготовочка.
- заготовочка.
- заготовочка.
- заготовочка.
- заготовочка GetRefDeepest.
- заготовочка.
- печатаем значение "фиктивного" генератора. По-другому.
- печатаем значение "фиктивного" генератора.
- вводим "фиктивный" параметр aGen1.
- ещё тест. Тут будем пытаться работать со списком генераторов.
CodeGen59.ms.script
- экранируем web-символы.
- для наглядности добавляем ТРЕТИЙ проект - Project3.
- убираем отладочную печать.
- выводим вывод теста в под-директорию связанную с именем теста.
- создаём директорию рекурсивно.
- прибавляем к пути вывода имя теста.
- вводим переменную l_OutPath.
- Выводим имя текущей директории чисто для отладки.
- ещё тест. Тут немножко поработаем с под-директориями.
CodeGen58.ms.script
- экранируем web-символы.
- используем определённый ранее массив Projects.
- вычищаем закомментированный код.
- пишем документацию.
- пишем комментарий в коде.
- запускаем всё наше хозяйство на списке элементов модели.
- вычищаем закомментированный код.
- вызываем генерацию проекта Project1 через вызов CallGens.
- определяем понятие CallGens.
- возвращаемся к "адресам".
- ешё тест. Тут будем определять возможность генерации сразу списка проектов.
CodeGen57.ms.script
- экранируем web-символы.
- заводим массив проектов.
- пересортировывам код.
- заводим массив генераторов.
- используем генератор pas.
- добавляем генератор pas.
- ещё тест. Тут будем определять ещё один генератор.
CodeGen56.ms.script
- Выводим имя текущего генератора. Для отладки.
- вводим понятие g_CurrentGeneratorName.
- пересортировываем методы.
- правим имя генератора.
- убираем отладочный вывод.
- правим документацию.
- вводим понятие DumpAsIs.
- окончательно декорируем имя свойства генератора.
- определяем понятие %GP. "по-честному".
- определяем понятие %GP.
- трансформируем имя.
- готовимся к трансформации имени.
- определяем стереотип для %GEN_PROPERTY.
- "по-честному" определяем %GEN_PROPERTY.
- декорируем.
- используем свойство генератора - gpName.
- определяем свойство генератора - gpName.
- определяем понятие %GEN_PROPERTY.
- ещё тест. Тут будем определять мета-информацию на генераторе.
CodeGen55.ms.script
- экранируем web-символы.
- "генерируем" проект Project2.
- добавляем проект Project2.
- правим комментарий.
- убираем отладочный вывод.
- заготовочка.
- убираем "позднее связывание".
- обобщаем.
- готовимся к обобщению.
- используем do_elem_func.
- определяем понятие do_elem_func.
- "по-честному" определяем elem_generator.
- используем понятие do_elem_proc.
- вводим понятие do_elem_proc.
- документируем.
- вводим понятие elem_generator.
- используем понятие elem_ref_proc. И убираем ещё одну "закорюку".
- вводим понятие elem_ref_proc.
- убираем "закорюки".
- убираем "закорюки".
- используем понятие GENERATOR.
- чистим код.
- вводим понятие GENERATOR.
- пишем комментарий.
- применяем понятие CallGen.
- по новой вводим понятие CallGen.
- заменяем CallGen на Child.CallGen.
- ещё тест. Тут будем вводить понятие "генератора".
CodeGen54.ms.script
- выводим имя "главного файла" в коммит.
- заготовочка.
- убираем закомментированный код.
- упрощаем вызов.
- декорируем.
- вводим понятие call.me.
- убираем FORWARD.