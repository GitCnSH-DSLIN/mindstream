UNIT Bind.ms.dict

USES
 axiom:WordInfo
;

MACRO |>
  ^@ IN Self
  Literal IN aMethod

 STRING VAR l_FullMethodName
 %SUMMARY 'Вызывает метод aMethod на объекте Self' ;

 TtfwValueTypes VAR l_ValueTypes
 Self pop:Word:Info pop:WordInfo:ValueTypes >>> l_ValueTypes

 l_ValueTypes IsNil ! ?ASSURE 'Нет типа для вызова метода'

 l_ValueTypes pop:ValueTypes:Name >>> l_FullMethodName
 l_FullMethodName ' ' string:Pos -1 == ?ASSURE 'Множественные типы для вызова методов объектов пока не поддерживаются'

 [ l_FullMethodName ':' aMethod |N ] strings:Cat >>> l_FullMethodName

 Self CompileValue
 l_FullMethodName Ctx:Parser:PushSymbol
; // |>

USES
 axiom:KeywordFinder
;

PROCEDURE bind
 STRING IN aName
 STRING VAR l_Name
 '.' aName Cat >>> l_Name

 STRING VAR l_TypeName
 Ctx:WordInfo pop:WordInfo:TypeName >>> l_TypeName

 Ctx:ClearTypeInfo

 l_Name Msg
 Ctx:Engine pop:ScriptEngine:CurrentCompilingDictionary pop:DictionaryEx:FileName sysutils:ExtractFileName Msg

 if ( l_Name IsWordDeclared ) then
 begin
 end
 else
 begin
  axiom:PushSymbol MACRO
  l_Name Ctx:Parser:PushSymbol
  axiom:PushSymbol ;
 end

/*{ //if ( l_Name IsWordDeclared ) then
 begin
  TtfwKeyWord VAR l_KeyWord
  l_Name Ctx:Engine pop:ScriptEngine:CurrentCompilingDictionary pop:Dictionary:KeywordByName >>> l_KeyWord
  if ( l_KeyWord IsNil ! ) then
  begin
   Ctx:Engine pop:ScriptEngine:CurrentCompilingDictionary Msg
   Ctx:Engine pop:ScriptEngine:CurrentCompilingDictionary pop:DictionaryEx:FileName sysutils:ExtractFileName Msg
   l_KeyWord Msg
   l_Name Msg
   l_KeyWord pop:KeyWord:Dictionary pop:DictionaryEx:FileName sysutils:ExtractFileName Msg
   if ( l_KeyWord pop:KeyWord:Dictionary pop:DictionaryEx:FileName sysutils:ExtractFileName Ctx:Engine pop:ScriptEngine:CurrentCompilingDictionary pop:DictionaryEx:FileName sysutils:ExtractFileName == ) then
   begin
    axiom:PushSymbol REDEFINITION
   end
  end
 end}*/

// axiom:PushSymbol :
// l_Name Ctx:Parser:PushSymbol
// axiom:PushSymbol ;

// axiom:PushSymbol MACRO
// l_Name Ctx:Parser:PushSymbol
// axiom:PushSymbol ;

 l_TypeName Ctx:Parser:PushSymbol
; // bind