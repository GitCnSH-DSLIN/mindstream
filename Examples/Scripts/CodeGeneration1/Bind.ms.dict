UNIT Bind.ms.dict

USES
 axiom:WordInfo
 core.ms.dict
 string.ms.dict
;

PROCEDURE ExpandMethodName
  TtfwWord IN Self
  STRING IN aMethod

 %SUMMARY 'Вызывает метод aMethod на объекте Self' ;

 STRING VAR l_FullMethodName

 TtfwValueTypes VAR l_ValueTypes
 Self pop:Word:Info pop:WordInfo:ValueTypes >>> l_ValueTypes

 l_ValueTypes IsNil ! ?ASSURE 'Нет типа для вызова метода'

 l_ValueTypes pop:ValueTypes:Name >>> l_FullMethodName
 l_FullMethodName ' ' string:Pos -1 == ?ASSURE 'Множественные типы для вызова методов объектов пока не поддерживаются'

 [ l_FullMethodName ':' aMethod ] strings:Cat >>> l_FullMethodName

 Self CompileValue
 l_FullMethodName Ctx:Parser:PushSymbol
; // ExpandMethodName

MACRO |>
  ^@ IN Self
  Literal IN aMethod

 %SUMMARY 'Вызывает метод aMethod на объекте Self' ;

 Self aMethod |N ExpandMethodName
; // |>

PROCEDURE bind
  STRING IN aName

 %SUMMARY 'Определяет "метод с точкой", который потом разворачивается в вызов "метода объекта"' ;
 STRING VAR l_Name
 '.' aName Cat >>> l_Name

 if ( l_Name IsWordDeclared ) then
 begin
  EXIT
 end

 axiom:PushSymbol MACRO
 l_Name Ctx:Parser:PushSymbol

 [
  '^@ IN Self'
  'Self'
  aName NameAsString
 ] Ctx:Parser:PushArray
 axiom:PushSymbol ExpandMethodName
 axiom:PushSymbol ;

; // bind

USES
 CompileTimeVar.ms.dict
;

TtfwWord CompileTime-VAR g_Stereo nil

MACRO DefferedSetStereo
 g_Stereo Ctx:SetWordProducerForCompiledClass
 nil >>> g_Stereo
; // DefferedSetStereo

PROCEDURE bindInPlace
  STRING IN aName
  TtfwWord IN aStereo

 %SUMMARY 'Определяет "метод с точкой", который потом разворачивается в вызов "метода объекта"' ;

 STRING VAR l_TypeInfo
 Ctx:WordInfo pop:WordInfo:ToString >>> l_TypeInfo
 
 Ctx:ClearTypeInfo

 aName bind

 l_TypeInfo ' ' string:Split:for> Ctx:Parser:PushSymbol

 g_Stereo IsNil ?ASSURE 'Вложенные методы пока не поддерживаются'

 aStereo >>> g_Stereo 
 axiom:PushSymbol DefferedSetStereo
; // bindInPlace