VOID TestWithDump PointTest
 IMMEDIATE VOID MACRO .-
  ^@ IN Self
  Self
  '-'
  ExpandMethodName
 ; // IMMEDIATE VOID MACRO .-
 
 IMMEDIATE VOID MACRO .+
  ^@ IN Self
  Self
  '+'
  ExpandMethodName
 ; // IMMEDIATE VOID MACRO .+
 
 IMMEDIATE VOID MACRO .BottomRight
  ^@ IN Self
  Self
  'BottomRight'
  ExpandMethodName
 ; // IMMEDIATE VOID MACRO .BottomRight
 
 IMMEDIATE VOID MACRO .Neg
  ^@ IN Self
  Self
  'Neg'
  ExpandMethodName
 ; // IMMEDIATE VOID MACRO .Neg
 
 IMMEDIATE REDIFINITION VOID MACRO .Print
  ^@ IN Self
  Self
  'Print'
  ExpandMethodName
 ; // IMMEDIATE REDIFINITION VOID MACRO .Print
 
 IMMEDIATE VOID MACRO .TopLeft
  ^@ IN Self
  Self
  'TopLeft'
  ExpandMethodName
 ; // IMMEDIATE VOID MACRO .TopLeft
 
 IMMEDIATE REDIFINITION VOID MACRO .ToPrintable
  ^@ IN Self
  Self
  'ToPrintable'
  ExpandMethodName
 ; // IMMEDIATE REDIFINITION VOID MACRO .ToPrintable
 
 IMMEDIATE VOID MACRO .X
  ^@ IN Self
  Self
  'X'
  ExpandMethodName
 ; // IMMEDIATE VOID MACRO .X
 
 IMMEDIATE VOID MACRO .Y
  ^@ IN Self
  Self
  'Y'
  ExpandMethodName
 ; // IMMEDIATE VOID MACRO .Y
 
 BarClass class_impl _:Bar
  %CLASS-METHODS %Class-Methods
   'ClassName'
   'FieldOffset'
   'InstanceSize'
   'ClassParent'
   'ClassParentName'
   'Print'
  ; // %CLASS-METHODS %Class-Methods
  
  %CONSTRUCTORS %Constructors
   'new'
  ; // %CONSTRUCTORS %Constructors
  
  %INHERITS %G
   @
   _:Object
  ; // %INHERITS %G
  
  %METHODS %Methods
   'ClassName'
   'FieldOffset'
   'InstanceSize'
   'ClassParent'
   'ClassParentName'
   'Print'
   'ToPrintable'
  ; // %METHODS %Methods
  
  %PROPERTIES %Props
   'class'
  ; // %PROPERTIES %Props
  
  ObjectClass STATIC-VAR c:Class:Parent
  FieldOffset STATIC-VAR c:Instance:Size
  INTEGER CONST c:Offset:VMT
   0
  _:Bar
  Result
  pop:Word:SetValue
 ; // BarClass class_impl _:Bar
 
 FooClass class_impl _:Foo
  %CLASS-METHODS %Class-Methods
   'ClassName'
   'FieldOffset'
   'InstanceSize'
   'ClassParent'
   'ClassParentName'
   'Print'
  ; // %CLASS-METHODS %Class-Methods
  
  %CONSTRUCTORS %Constructors
   'new'
  ; // %CONSTRUCTORS %Constructors
  
  %INHERITS %G
   @
   _:Object
  ; // %INHERITS %G
  
  %METHODS %Methods
   'ClassName'
   'FieldOffset'
   'InstanceSize'
   'ClassParent'
   'ClassParentName'
   'Print'
   'ToPrintable'
  ; // %METHODS %Methods
  
  %PROPERTIES %Props
   'class'
  ; // %PROPERTIES %Props
  
  ObjectClass STATIC-VAR c:Class:Parent
  FieldOffset STATIC-VAR c:Instance:Size
  INTEGER CONST c:Offset:VMT
   0
  _:Foo
  Result
  pop:Word:SetValue
 ; // FooClass class_impl _:Foo
 
 PointClass class_impl _:Point
  %CLASS-METHODS %Class-Methods
   'ClassName'
   'FieldOffset'
   'InstanceSize'
   'ClassParent'
   'ClassParentName'
   'Print'
  ; // %CLASS-METHODS %Class-Methods
  
  %CONSTRUCTORS %Constructors
   'new'
   ':'
   '0'
   'XY'
   'OF'
  ; // %CONSTRUCTORS %Constructors
  
  %INHERITS %G
   @
   _:Object
  ; // %INHERITS %G
  
  %METHODS %Methods
   'ClassName'
   'FieldOffset'
   'InstanceSize'
   'ClassParent'
   'ClassParentName'
   'Print'
   'ToPrintable'
   '+'
   'Neg'
   '-'
  ; // %METHODS %Methods
  
  %PROPERTIES %Props
   'class'
   'X'
   'Y'
  ; // %PROPERTIES %Props
  
  ObjectClass STATIC-VAR c:Class:Parent
  FieldOffset STATIC-VAR c:Instance:Size
  INTEGER CONST c:Offset:VMT
   0
  INTEGER CONST c:Offset:X
   1
  INTEGER CONST c:Offset:Y
   2
  _:Point
  Result
  pop:Word:SetValue
 ; // PointClass class_impl _:Point
 
 RectangleClass class_impl _:Rectangle
  %CLASS-METHODS %Class-Methods
   'ClassName'
   'FieldOffset'
   'InstanceSize'
   'ClassParent'
   'ClassParentName'
   'Print'
  ; // %CLASS-METHODS %Class-Methods
  
  %CONSTRUCTORS %Constructors
   'new'
   ':'
  ; // %CONSTRUCTORS %Constructors
  
  %INHERITS %G
   @
   _:Object
  ; // %INHERITS %G
  
  %METHODS %Methods
   'ClassName'
   'FieldOffset'
   'InstanceSize'
   'ClassParent'
   'ClassParentName'
   'Print'
   'ToPrintable'
  ; // %METHODS %Methods
  
  %PROPERTIES %Props
   'class'
   'TopLeft'
   'BottomRight'
  ; // %PROPERTIES %Props
  
  ObjectClass STATIC-VAR c:Class:Parent
  FieldOffset STATIC-VAR c:Instance:Size
  INTEGER CONST c:Offset:BottomRight
   2
  INTEGER CONST c:Offset:TopLeft
   1
  INTEGER CONST c:Offset:VMT
   0
  _:Rectangle
  Result
  pop:Word:SetValue
 ; // RectangleClass class_impl _:Rectangle
 
 IMMEDIATE VOID TYPE Bar
  TtfwValueTypes
  Ctx:IncludeValueTypes
 ; // IMMEDIATE VOID TYPE Bar
 
 ObjectClass readonly Object:class
  Object IN Self
  Self
  FieldByOffset
  ^@ (
   _:Object _:Object pop:Word:SetValue ::
   'c:Offset:VMT'
  )
  Result
  pop:Word:SetValue
 ; // ObjectClass readonly Object:class
 
 STRING method Object:ClassName
  Object IN Self
  Self
  Object:class
  ObjectClass:ClassName
  Result
  pop:Word:SetValue
 ; // STRING method Object:ClassName
 
 ObjectClass method Object:ClassParent
  Object IN Self
  Self
  Object:class
  ObjectClass:ClassParent
  Result
  pop:Word:SetValue
 ; // ObjectClass method Object:ClassParent
 
 STRING method Object:ClassParentName
  Object IN Self
  Self
  Object:class
  ObjectClass:ClassParentName
  Result
  pop:Word:SetValue
 ; // STRING method Object:ClassParentName
 
 FieldOffset method Object:FieldOffset
  Object IN Self
  Self
  Object:class
  ObjectClass:FieldOffset
  '>>>'
  Result
 ; // FieldOffset method Object:FieldOffset
 
 INTEGER method Object:InstanceSize
  Object IN Self
  Self
  Object:class
  ObjectClass:InstanceSize
  Result
  pop:Word:SetValue
 ; // INTEGER method Object:InstanceSize
 
 Object constructor Object:new
  ARRAY [
   @
   _:Object
  ]
  Result
  pop:Word:SetValue
 ; // Object constructor Object:new
 
 REDIFINITION VIRTUAL VOID method Object:Print
  Object IN Self
  Self
  Object:ToPrintable
  Print
 ; // REDIFINITION VIRTUAL VOID method Object:Print
 
 VIRTUAL STRING method Object:ToPrintable
  Object IN Self
  Self
  ToPrintable
  Result
  pop:Word:SetValue
  ARRAY [
   Self
   Object:ClassName
   ' : '
   Result
  ]
  strings:Cat
  Result
  pop:Word:SetValue
 ; // VIRTUAL STRING method Object:ToPrintable
 
 IMMEDIATE VOID TYPE BarClass
  TtfwValueTypes
  Ctx:IncludeValueTypes
 ; // IMMEDIATE VOID TYPE BarClass
 
 STRING : ObjectClass:ClassName
  %SUMMARY %SUM
   'Возвращает имя класса'
  ; // %SUMMARY %SUM
  
  ObjectClass IN Self
  Self
  |N
  ':'
  string:Split
  Result
  pop:Word:SetValue
  DROP
 ; // STRING : ObjectClass:ClassName
 
 ObjectClass : ObjectClass:ClassParent
  %SUMMARY %SUM
   'Возвращает родительский класс'
  ; // %SUMMARY %SUM
  
  ObjectClass IN Self
  Self
  %%
  ClassParentName
  DO
  Result
  pop:Word:SetValue
 ; // ObjectClass : ObjectClass:ClassParent
 
 STRING : ObjectClass:ClassParentName
  %SUMMARY %SUM
   'Возвращает имя родительского класса'
  ; // %SUMMARY %SUM
  
  ObjectClass VAR l_ClassParent
  ObjectClass IN Self
  Self
  %%
  ClassParentName
  DO
  l_ClassParent
  pop:Word:SetValue
  if
   (
    l_ClassParent
    IsNil
   )
  then
   BEGIN
    '<base>'
    Result
    pop:Word:SetValue
   END
  else
   BEGIN
    l_ClassParent
    ObjectClass:ClassName
    Result
    pop:Word:SetValue
   END
 ; // STRING : ObjectClass:ClassParentName
 
 FieldOffset : ObjectClass:FieldOffset
  %SUMMARY %SUM
   'Вычисляет смещение поля класса'
  ; // %SUMMARY %SUM
  
  ^L IN aFieldName
  STRING VAR l_FieldName
  TtfwWord VAR l_FieldVAR
  ObjectClass IN Self
  aFieldName
  |N
  l_FieldName
  pop:Word:SetValue
  l_FieldName
  MakeFieldOffsetName
  l_FieldName
  pop:Word:SetValue
  Self
  %%
  l_FieldName
  l_FieldVAR
  pop:Word:SetValue
  l_FieldVAR
  IsNil
  ?FAIL
  ARRAY [
   'Поле '
   l_FieldName
   ' на классе '
   Self
   ObjectClass:ClassName
   ' не определено'
  ]
  l_FieldVAR
  DO
  Result
  pop:Word:SetValue
 ; // FieldOffset : ObjectClass:FieldOffset
 
 INTEGER : ObjectClass:InstanceSize
  %SUMMARY %SUM
   'Возвращает размер экземпляров класса'
  ; // %SUMMARY %SUM
  
  ObjectClass IN Self
  Self
  %%
  InstanceSizeName
  DO
  Result
  pop:Word:SetValue
 ; // INTEGER : ObjectClass:InstanceSize
 
 : ObjectClass:Print
  %SUMMARY %SUM
   'Печатает класс'
  ; // %SUMMARY %SUM
  
  ObjectClass IN Self
  if
   (
    Self
    IsNil
   )
  then
   BEGIN
    '<base>'
    .
   END
  else
   BEGIN
    Self
    ObjectClass:ClassName
    .
   END
 ; // : ObjectClass:Print
 
 BarClass class_impl _:Bar
  %CLASS-METHODS %Class-Methods
   'ClassName'
   'FieldOffset'
   'InstanceSize'
   'ClassParent'
   'ClassParentName'
   'Print'
  ; // %CLASS-METHODS %Class-Methods
  
  %CONSTRUCTORS %Constructors
   'new'
  ; // %CONSTRUCTORS %Constructors
  
  %INHERITS %G
   @
   _:Object
  ; // %INHERITS %G
  
  %METHODS %Methods
   'ClassName'
   'FieldOffset'
   'InstanceSize'
   'ClassParent'
   'ClassParentName'
   'Print'
   'ToPrintable'
  ; // %METHODS %Methods
  
  %PROPERTIES %Props
   'class'
  ; // %PROPERTIES %Props
  
  ObjectClass STATIC-VAR c:Class:Parent
  FieldOffset STATIC-VAR c:Instance:Size
  INTEGER CONST c:Offset:VMT
   0
  _:Bar
  Result
  pop:Word:SetValue
 ; // BarClass class_impl _:Bar
 
 FooClass class_impl _:Foo
  %CLASS-METHODS %Class-Methods
   'ClassName'
   'FieldOffset'
   'InstanceSize'
   'ClassParent'
   'ClassParentName'
   'Print'
  ; // %CLASS-METHODS %Class-Methods
  
  %CONSTRUCTORS %Constructors
   'new'
  ; // %CONSTRUCTORS %Constructors
  
  %INHERITS %G
   @
   _:Object
  ; // %INHERITS %G
  
  %METHODS %Methods
   'ClassName'
   'FieldOffset'
   'InstanceSize'
   'ClassParent'
   'ClassParentName'
   'Print'
   'ToPrintable'
  ; // %METHODS %Methods
  
  %PROPERTIES %Props
   'class'
  ; // %PROPERTIES %Props
  
  ObjectClass STATIC-VAR c:Class:Parent
  FieldOffset STATIC-VAR c:Instance:Size
  INTEGER CONST c:Offset:VMT
   0
  _:Foo
  Result
  pop:Word:SetValue
 ; // FooClass class_impl _:Foo
 
 PointClass class_impl _:Point
  %CLASS-METHODS %Class-Methods
   'ClassName'
   'FieldOffset'
   'InstanceSize'
   'ClassParent'
   'ClassParentName'
   'Print'
  ; // %CLASS-METHODS %Class-Methods
  
  %CONSTRUCTORS %Constructors
   'new'
   ':'
   '0'
   'XY'
   'OF'
  ; // %CONSTRUCTORS %Constructors
  
  %INHERITS %G
   @
   _:Object
  ; // %INHERITS %G
  
  %METHODS %Methods
   'ClassName'
   'FieldOffset'
   'InstanceSize'
   'ClassParent'
   'ClassParentName'
   'Print'
   'ToPrintable'
   '+'
   'Neg'
   '-'
  ; // %METHODS %Methods
  
  %PROPERTIES %Props
   'class'
   'X'
   'Y'
  ; // %PROPERTIES %Props
  
  ObjectClass STATIC-VAR c:Class:Parent
  FieldOffset STATIC-VAR c:Instance:Size
  INTEGER CONST c:Offset:VMT
   0
  INTEGER CONST c:Offset:X
   1
  INTEGER CONST c:Offset:Y
   2
  _:Point
  Result
  pop:Word:SetValue
 ; // PointClass class_impl _:Point
 
 RectangleClass class_impl _:Rectangle
  %CLASS-METHODS %Class-Methods
   'ClassName'
   'FieldOffset'
   'InstanceSize'
   'ClassParent'
   'ClassParentName'
   'Print'
  ; // %CLASS-METHODS %Class-Methods
  
  %CONSTRUCTORS %Constructors
   'new'
   ':'
  ; // %CONSTRUCTORS %Constructors
  
  %INHERITS %G
   @
   _:Object
  ; // %INHERITS %G
  
  %METHODS %Methods
   'ClassName'
   'FieldOffset'
   'InstanceSize'
   'ClassParent'
   'ClassParentName'
   'Print'
   'ToPrintable'
  ; // %METHODS %Methods
  
  %PROPERTIES %Props
   'class'
   'TopLeft'
   'BottomRight'
  ; // %PROPERTIES %Props
  
  ObjectClass STATIC-VAR c:Class:Parent
  FieldOffset STATIC-VAR c:Instance:Size
  INTEGER CONST c:Offset:BottomRight
   2
  INTEGER CONST c:Offset:TopLeft
   1
  INTEGER CONST c:Offset:VMT
   0
  _:Rectangle
  Result
  pop:Word:SetValue
 ; // RectangleClass class_impl _:Rectangle
 
 IMMEDIATE VOID TYPE Foo
  TtfwValueTypes
  Ctx:IncludeValueTypes
 ; // IMMEDIATE VOID TYPE Foo
 
 ObjectClass readonly Object:class
  Object IN Self
  Self
  FieldByOffset
  ^@ (
   _:Object _:Object pop:Word:SetValue ::
   'c:Offset:VMT'
  )
  Result
  pop:Word:SetValue
 ; // ObjectClass readonly Object:class
 
 STRING method Object:ClassName
  Object IN Self
  Self
  Object:class
  ObjectClass:ClassName
  Result
  pop:Word:SetValue
 ; // STRING method Object:ClassName
 
 ObjectClass method Object:ClassParent
  Object IN Self
  Self
  Object:class
  ObjectClass:ClassParent
  Result
  pop:Word:SetValue
 ; // ObjectClass method Object:ClassParent
 
 STRING method Object:ClassParentName
  Object IN Self
  Self
  Object:class
  ObjectClass:ClassParentName
  Result
  pop:Word:SetValue
 ; // STRING method Object:ClassParentName
 
 FieldOffset method Object:FieldOffset
  Object IN Self
  Self
  Object:class
  ObjectClass:FieldOffset
  '>>>'
  Result
 ; // FieldOffset method Object:FieldOffset
 
 INTEGER method Object:InstanceSize
  Object IN Self
  Self
  Object:class
  ObjectClass:InstanceSize
  Result
  pop:Word:SetValue
 ; // INTEGER method Object:InstanceSize
 
 Object constructor Object:new
  ARRAY [
   @
   _:Object
  ]
  Result
  pop:Word:SetValue
 ; // Object constructor Object:new
 
 REDIFINITION VIRTUAL VOID method Object:Print
  Object IN Self
  Self
  Object:ToPrintable
  Print
 ; // REDIFINITION VIRTUAL VOID method Object:Print
 
 VIRTUAL STRING method Object:ToPrintable
  Object IN Self
  Self
  ToPrintable
  Result
  pop:Word:SetValue
  ARRAY [
   Self
   Object:ClassName
   ' : '
   Result
  ]
  strings:Cat
  Result
  pop:Word:SetValue
 ; // VIRTUAL STRING method Object:ToPrintable
 
 IMMEDIATE VOID TYPE FooClass
  TtfwValueTypes
  Ctx:IncludeValueTypes
 ; // IMMEDIATE VOID TYPE FooClass
 
 STRING : ObjectClass:ClassName
  %SUMMARY %SUM
   'Возвращает имя класса'
  ; // %SUMMARY %SUM
  
  ObjectClass IN Self
  Self
  |N
  ':'
  string:Split
  Result
  pop:Word:SetValue
  DROP
 ; // STRING : ObjectClass:ClassName
 
 ObjectClass : ObjectClass:ClassParent
  %SUMMARY %SUM
   'Возвращает родительский класс'
  ; // %SUMMARY %SUM
  
  ObjectClass IN Self
  Self
  %%
  ClassParentName
  DO
  Result
  pop:Word:SetValue
 ; // ObjectClass : ObjectClass:ClassParent
 
 STRING : ObjectClass:ClassParentName
  %SUMMARY %SUM
   'Возвращает имя родительского класса'
  ; // %SUMMARY %SUM
  
  ObjectClass VAR l_ClassParent
  ObjectClass IN Self
  Self
  %%
  ClassParentName
  DO
  l_ClassParent
  pop:Word:SetValue
  if
   (
    l_ClassParent
    IsNil
   )
  then
   BEGIN
    '<base>'
    Result
    pop:Word:SetValue
   END
  else
   BEGIN
    l_ClassParent
    ObjectClass:ClassName
    Result
    pop:Word:SetValue
   END
 ; // STRING : ObjectClass:ClassParentName
 
 FieldOffset : ObjectClass:FieldOffset
  %SUMMARY %SUM
   'Вычисляет смещение поля класса'
  ; // %SUMMARY %SUM
  
  ^L IN aFieldName
  STRING VAR l_FieldName
  TtfwWord VAR l_FieldVAR
  ObjectClass IN Self
  aFieldName
  |N
  l_FieldName
  pop:Word:SetValue
  l_FieldName
  MakeFieldOffsetName
  l_FieldName
  pop:Word:SetValue
  Self
  %%
  l_FieldName
  l_FieldVAR
  pop:Word:SetValue
  l_FieldVAR
  IsNil
  ?FAIL
  ARRAY [
   'Поле '
   l_FieldName
   ' на классе '
   Self
   ObjectClass:ClassName
   ' не определено'
  ]
  l_FieldVAR
  DO
  Result
  pop:Word:SetValue
 ; // FieldOffset : ObjectClass:FieldOffset
 
 INTEGER : ObjectClass:InstanceSize
  %SUMMARY %SUM
   'Возвращает размер экземпляров класса'
  ; // %SUMMARY %SUM
  
  ObjectClass IN Self
  Self
  %%
  InstanceSizeName
  DO
  Result
  pop:Word:SetValue
 ; // INTEGER : ObjectClass:InstanceSize
 
 : ObjectClass:Print
  %SUMMARY %SUM
   'Печатает класс'
  ; // %SUMMARY %SUM
  
  ObjectClass IN Self
  if
   (
    Self
    IsNil
   )
  then
   BEGIN
    '<base>'
    .
   END
  else
   BEGIN
    Self
    ObjectClass:ClassName
    .
   END
 ; // : ObjectClass:Print
 
 ARRAY VAR l_Points
 ARRAY VAR l_Rectangles
 Object VAR O1
 Point VAR P1
 Point VAR P10
 Point VAR P11
 Point VAR P2
 Point VAR P3
 Point VAR P4
 Point VAR P5
 Point VAR P6
 Point VAR P7
 Point VAR P8
 Point VAR P9
 IMMEDIATE VOID TYPE Pixel
  TtfwValueTypes
  Ctx:IncludeValueTypes
 ; // IMMEDIATE VOID TYPE Pixel
 
 IMMEDIATE VOID TYPE PixelList
  TtfwValueTypes
  Ctx:IncludeValueTypes
 ; // IMMEDIATE VOID TYPE PixelList
 
 IMMEDIATE VOID TYPE Point
  TtfwValueTypes
  Ctx:IncludeValueTypes
 ; // IMMEDIATE VOID TYPE Point
 
 Point method Point:-
  ^ IN _aPoint
  IMMEDIATE VOID OPERATOR aPoint
   'Point'
   '_aPoint'
   MangledNamePusher
  ; // IMMEDIATE VOID OPERATOR aPoint
  
  Point IN Self
  Point:OF
  (
   Self
   Point:+
   (
    Point (
     _aPoint |^
    )
    Point:Neg
   )
  )
  Result
  pop:Word:SetValue
 ; // Point method Point:-
 
 Point constructor Point::
  ^ IN _aX
  ^ IN _aY
  IMMEDIATE VOID OPERATOR aX
   'Pixel'
   '_aX'
   MangledNamePusher
  ; // IMMEDIATE VOID OPERATOR aX
  
  IMMEDIATE VOID OPERATOR aY
   'Pixel'
   '_aY'
   MangledNamePusher
  ; // IMMEDIATE VOID OPERATOR aY
  
  ARRAY [
   @
   _:Point
   Pixel (
    _aX |^
   )
   Pixel (
    _aY |^
   )
  ]
  Result
  pop:Word:SetValue
 ; // Point constructor Point::
 
 Point method Point:+
  ^ IN _aPoint
  IMMEDIATE VOID OPERATOR aPoint
   'Point'
   '_aPoint'
   MangledNamePusher
  ; // IMMEDIATE VOID OPERATOR aPoint
  
  Point IN Self
  Point::
  (
   Self
   Point:X
   (+)
   (
    Point (
     _aPoint |^
    )
    Point:X
   )
  )
  (
   Self
   Point:Y
   (+)
   (
    Point (
     _aPoint |^
    )
    Point:Y
   )
  )
  Result
  pop:Word:SetValue
 ; // Point method Point:+
 
 Point constructor Point:0
  Point::
  0
  0
  Result
  pop:Word:SetValue
 ; // Point constructor Point:0
 
 ObjectClass readonly Object:class
  Object IN Self
  Self
  FieldByOffset
  ^@ (
   _:Object _:Object pop:Word:SetValue ::
   'c:Offset:VMT'
  )
  Result
  pop:Word:SetValue
 ; // ObjectClass readonly Object:class
 
 STRING method Object:ClassName
  Object IN Self
  Self
  Object:class
  ObjectClass:ClassName
  Result
  pop:Word:SetValue
 ; // STRING method Object:ClassName
 
 ObjectClass method Object:ClassParent
  Object IN Self
  Self
  Object:class
  ObjectClass:ClassParent
  Result
  pop:Word:SetValue
 ; // ObjectClass method Object:ClassParent
 
 STRING method Object:ClassParentName
  Object IN Self
  Self
  Object:class
  ObjectClass:ClassParentName
  Result
  pop:Word:SetValue
 ; // STRING method Object:ClassParentName
 
 FieldOffset method Object:FieldOffset
  Object IN Self
  Self
  Object:class
  ObjectClass:FieldOffset
  '>>>'
  Result
 ; // FieldOffset method Object:FieldOffset
 
 INTEGER method Object:InstanceSize
  Object IN Self
  Self
  Object:class
  ObjectClass:InstanceSize
  Result
  pop:Word:SetValue
 ; // INTEGER method Object:InstanceSize
 
 Point method Point:Neg
  Point IN Self
  Point::
  Neg
  (
   Self
   Point:X
  )
  Neg
  (
   Self
   Point:Y
  )
  Result
  pop:Word:SetValue
 ; // Point method Point:Neg
 
 Object constructor Object:new
  ARRAY [
   @
   _:Object
  ]
  Result
  pop:Word:SetValue
 ; // Object constructor Object:new
 
 Point constructor Point:OF
  ^ IN _aPoint
  IMMEDIATE VOID OPERATOR aPoint
   'Point'
   '_aPoint'
   MangledNamePusher
  ; // IMMEDIATE VOID OPERATOR aPoint
  
  Point::
  (
   Point (
    _aPoint |^
   )
   Point:X
  )
  (
   Point (
    _aPoint |^
   )
   Point:Y
  )
  Result
  pop:Word:SetValue
 ; // Point constructor Point:OF
 
 REDIFINITION OVERRIDE VOID method Point:Print
  Point IN Self
  Self
  Point:ToPrintable
  Print
 ; // REDIFINITION OVERRIDE VOID method Point:Print
 
 REDIFINITION OVERRIDE STRING method Point:ToPrintable
  Point IN Self
  ARRAY [
   '( '
   'X: '
   Self
   Point:X
   ToPrintable
   ', Y: '
   Self
   Point:Y
   ToPrintable
   ' )'
  ]
  strings:Cat
  Result
  pop:Word:SetValue
 ; // REDIFINITION OVERRIDE STRING method Point:ToPrintable
 
 Pixel readonly Point:X
  Point IN Self
  Self
  FieldByOffset
  ^@ (
   _:Point _:Point pop:Word:SetValue ::
   'c:Offset:X'
  )
  Result
  pop:Word:SetValue
 ; // Pixel readonly Point:X
 
 Point constructor Point:XY
  ^ IN _aPoint
  IMMEDIATE VOID OPERATOR aPoint
   ''
   '_aPoint'
   MangledNamePusher
  ; // IMMEDIATE VOID OPERATOR aPoint
  
  ARRAY VAR Points
  ARRAY [
   (
    _aPoint |^
   )
  ]
  Points
  pop:Word:SetValue
  Point::
  (
   Points
   FieldByOffset
   0
  )
  (
   Points
   FieldByOffset
   1
  )
  Result
  pop:Word:SetValue
 ; // Point constructor Point:XY
 
 Pixel readonly Point:Y
  Point IN Self
  Self
  FieldByOffset
  ^@ (
   _:Point _:Point pop:Word:SetValue ::
   'c:Offset:Y'
  )
  Result
  pop:Word:SetValue
 ; // Pixel readonly Point:Y
 
 IMMEDIATE VOID TYPE PointClass
  TtfwValueTypes
  Ctx:IncludeValueTypes
 ; // IMMEDIATE VOID TYPE PointClass
 
 STRING : ObjectClass:ClassName
  %SUMMARY %SUM
   'Возвращает имя класса'
  ; // %SUMMARY %SUM
  
  ObjectClass IN Self
  Self
  |N
  ':'
  string:Split
  Result
  pop:Word:SetValue
  DROP
 ; // STRING : ObjectClass:ClassName
 
 ObjectClass : ObjectClass:ClassParent
  %SUMMARY %SUM
   'Возвращает родительский класс'
  ; // %SUMMARY %SUM
  
  ObjectClass IN Self
  Self
  %%
  ClassParentName
  DO
  Result
  pop:Word:SetValue
 ; // ObjectClass : ObjectClass:ClassParent
 
 STRING : ObjectClass:ClassParentName
  %SUMMARY %SUM
   'Возвращает имя родительского класса'
  ; // %SUMMARY %SUM
  
  ObjectClass VAR l_ClassParent
  ObjectClass IN Self
  Self
  %%
  ClassParentName
  DO
  l_ClassParent
  pop:Word:SetValue
  if
   (
    l_ClassParent
    IsNil
   )
  then
   BEGIN
    '<base>'
    Result
    pop:Word:SetValue
   END
  else
   BEGIN
    l_ClassParent
    ObjectClass:ClassName
    Result
    pop:Word:SetValue
   END
 ; // STRING : ObjectClass:ClassParentName
 
 FieldOffset : ObjectClass:FieldOffset
  %SUMMARY %SUM
   'Вычисляет смещение поля класса'
  ; // %SUMMARY %SUM
  
  ^L IN aFieldName
  STRING VAR l_FieldName
  TtfwWord VAR l_FieldVAR
  ObjectClass IN Self
  aFieldName
  |N
  l_FieldName
  pop:Word:SetValue
  l_FieldName
  MakeFieldOffsetName
  l_FieldName
  pop:Word:SetValue
  Self
  %%
  l_FieldName
  l_FieldVAR
  pop:Word:SetValue
  l_FieldVAR
  IsNil
  ?FAIL
  ARRAY [
   'Поле '
   l_FieldName
   ' на классе '
   Self
   ObjectClass:ClassName
   ' не определено'
  ]
  l_FieldVAR
  DO
  Result
  pop:Word:SetValue
 ; // FieldOffset : ObjectClass:FieldOffset
 
 INTEGER : ObjectClass:InstanceSize
  %SUMMARY %SUM
   'Возвращает размер экземпляров класса'
  ; // %SUMMARY %SUM
  
  ObjectClass IN Self
  Self
  %%
  InstanceSizeName
  DO
  Result
  pop:Word:SetValue
 ; // INTEGER : ObjectClass:InstanceSize
 
 : ObjectClass:Print
  %SUMMARY %SUM
   'Печатает класс'
  ; // %SUMMARY %SUM
  
  ObjectClass IN Self
  if
   (
    Self
    IsNil
   )
  then
   BEGIN
    '<base>'
    .
   END
  else
   BEGIN
    Self
    ObjectClass:ClassName
    .
   END
 ; // : ObjectClass:Print
 
 Point VAR PointFake
 Rectangle VAR R1
 Rectangle VAR R2
 IMMEDIATE VOID TYPE Rectangle
  TtfwValueTypes
  Ctx:IncludeValueTypes
 ; // IMMEDIATE VOID TYPE Rectangle
 
 Rectangle constructor Rectangle::
  ^ IN _aBottomRight
  ^ IN _aTopLeft
  IMMEDIATE VOID OPERATOR aBottomRight
   'Point'
   '_aBottomRight'
   MangledNamePusher
  ; // IMMEDIATE VOID OPERATOR aBottomRight
  
  IMMEDIATE VOID OPERATOR aTopLeft
   'Point'
   '_aTopLeft'
   MangledNamePusher
  ; // IMMEDIATE VOID OPERATOR aTopLeft
  
  ARRAY [
   @
   _:Rectangle
   Point (
    _aTopLeft |^
   )
   Point (
    _aBottomRight |^
   )
  ]
  Result
  pop:Word:SetValue
 ; // Rectangle constructor Rectangle::
 
 Point readonly Rectangle:BottomRight
  Rectangle IN Self
  Self
  FieldByOffset
  ^@ (
   _:Rectangle _:Rectangle pop:Word:SetValue ::
   'c:Offset:BottomRight'
  )
  Result
  pop:Word:SetValue
 ; // Point readonly Rectangle:BottomRight
 
 ObjectClass readonly Object:class
  Object IN Self
  Self
  FieldByOffset
  ^@ (
   _:Object _:Object pop:Word:SetValue ::
   'c:Offset:VMT'
  )
  Result
  pop:Word:SetValue
 ; // ObjectClass readonly Object:class
 
 STRING method Object:ClassName
  Object IN Self
  Self
  Object:class
  ObjectClass:ClassName
  Result
  pop:Word:SetValue
 ; // STRING method Object:ClassName
 
 ObjectClass method Object:ClassParent
  Object IN Self
  Self
  Object:class
  ObjectClass:ClassParent
  Result
  pop:Word:SetValue
 ; // ObjectClass method Object:ClassParent
 
 STRING method Object:ClassParentName
  Object IN Self
  Self
  Object:class
  ObjectClass:ClassParentName
  Result
  pop:Word:SetValue
 ; // STRING method Object:ClassParentName
 
 FieldOffset method Object:FieldOffset
  Object IN Self
  Self
  Object:class
  ObjectClass:FieldOffset
  '>>>'
  Result
 ; // FieldOffset method Object:FieldOffset
 
 INTEGER method Object:InstanceSize
  Object IN Self
  Self
  Object:class
  ObjectClass:InstanceSize
  Result
  pop:Word:SetValue
 ; // INTEGER method Object:InstanceSize
 
 Object constructor Object:new
  ARRAY [
   @
   _:Object
  ]
  Result
  pop:Word:SetValue
 ; // Object constructor Object:new
 
 REDIFINITION OVERRIDE VOID method Rectangle:Print
  Rectangle IN Self
  Self
  Rectangle:ToPrintable
  Print
 ; // REDIFINITION OVERRIDE VOID method Rectangle:Print
 
 Point readonly Rectangle:TopLeft
  Rectangle IN Self
  Self
  FieldByOffset
  ^@ (
   _:Rectangle _:Rectangle pop:Word:SetValue ::
   'c:Offset:TopLeft'
  )
  Result
  pop:Word:SetValue
 ; // Point readonly Rectangle:TopLeft
 
 REDIFINITION OVERRIDE STRING method Rectangle:ToPrintable
  Rectangle IN Self
  ARRAY [
   '( '
   'TopLeft: '
   Self
   Rectangle:TopLeft
   Point:ToPrintable
   ', BottomRight: '
   Self
   Rectangle:BottomRight
   Point:ToPrintable
   ' )'
  ]
  strings:Cat
  Result
  pop:Word:SetValue
 ; // REDIFINITION OVERRIDE STRING method Rectangle:ToPrintable
 
 IMMEDIATE VOID TYPE RectangleClass
  TtfwValueTypes
  Ctx:IncludeValueTypes
 ; // IMMEDIATE VOID TYPE RectangleClass
 
 STRING : ObjectClass:ClassName
  %SUMMARY %SUM
   'Возвращает имя класса'
  ; // %SUMMARY %SUM
  
  ObjectClass IN Self
  Self
  |N
  ':'
  string:Split
  Result
  pop:Word:SetValue
  DROP
 ; // STRING : ObjectClass:ClassName
 
 ObjectClass : ObjectClass:ClassParent
  %SUMMARY %SUM
   'Возвращает родительский класс'
  ; // %SUMMARY %SUM
  
  ObjectClass IN Self
  Self
  %%
  ClassParentName
  DO
  Result
  pop:Word:SetValue
 ; // ObjectClass : ObjectClass:ClassParent
 
 STRING : ObjectClass:ClassParentName
  %SUMMARY %SUM
   'Возвращает имя родительского класса'
  ; // %SUMMARY %SUM
  
  ObjectClass VAR l_ClassParent
  ObjectClass IN Self
  Self
  %%
  ClassParentName
  DO
  l_ClassParent
  pop:Word:SetValue
  if
   (
    l_ClassParent
    IsNil
   )
  then
   BEGIN
    '<base>'
    Result
    pop:Word:SetValue
   END
  else
   BEGIN
    l_ClassParent
    ObjectClass:ClassName
    Result
    pop:Word:SetValue
   END
 ; // STRING : ObjectClass:ClassParentName
 
 FieldOffset : ObjectClass:FieldOffset
  %SUMMARY %SUM
   'Вычисляет смещение поля класса'
  ; // %SUMMARY %SUM
  
  ^L IN aFieldName
  STRING VAR l_FieldName
  TtfwWord VAR l_FieldVAR
  ObjectClass IN Self
  aFieldName
  |N
  l_FieldName
  pop:Word:SetValue
  l_FieldName
  MakeFieldOffsetName
  l_FieldName
  pop:Word:SetValue
  Self
  %%
  l_FieldName
  l_FieldVAR
  pop:Word:SetValue
  l_FieldVAR
  IsNil
  ?FAIL
  ARRAY [
   'Поле '
   l_FieldName
   ' на классе '
   Self
   ObjectClass:ClassName
   ' не определено'
  ]
  l_FieldVAR
  DO
  Result
  pop:Word:SetValue
 ; // FieldOffset : ObjectClass:FieldOffset
 
 INTEGER : ObjectClass:InstanceSize
  %SUMMARY %SUM
   'Возвращает размер экземпляров класса'
  ; // %SUMMARY %SUM
  
  ObjectClass IN Self
  Self
  %%
  InstanceSizeName
  DO
  Result
  pop:Word:SetValue
 ; // INTEGER : ObjectClass:InstanceSize
 
 : ObjectClass:Print
  %SUMMARY %SUM
   'Печатает класс'
  ; // %SUMMARY %SUM
  
  ObjectClass IN Self
  if
   (
    Self
    IsNil
   )
  then
   BEGIN
    '<base>'
    .
   END
  else
   BEGIN
    Self
    ObjectClass:ClassName
    .
   END
 ; // : ObjectClass:Print
 
 PointTest
 DumpElement
 _:Object
 DumpElement
 _:Point
 DumpElement
 _:Rectangle
 DumpElement
 _:Object
 ObjectClass:FieldOffset
 'VMT'
 Print
 _:Point
 ObjectClass:FieldOffset
 'VMT'
 Print
 _:Rectangle
 ObjectClass:FieldOffset
 'VMT'
 Print
 _:Foo
 ObjectClass:FieldOffset
 'VMT'
 Print
 _:Bar
 ObjectClass:FieldOffset
 'VMT'
 Print
 _:Object
 ObjectClass:ClassParentName
 Print
 _:Point
 ObjectClass:ClassParentName
 Print
 _:Rectangle
 ObjectClass:ClassParentName
 Print
 _:Foo
 ObjectClass:ClassParentName
 Print
 _:Bar
 ObjectClass:ClassParentName
 Print
 _:Object
 ObjectClass:ClassParent
 Print
 _:Point
 ObjectClass:ClassParent
 Print
 _:Rectangle
 ObjectClass:ClassParent
 Print
 _:Foo
 ObjectClass:ClassParent
 Print
 _:Bar
 ObjectClass:ClassParent
 Print
 _:Point
 ObjectClass:FieldOffset
 'X'
 Print
 _:Point
 ObjectClass:FieldOffset
 'Y'
 Print
 _:Rectangle
 ObjectClass:FieldOffset
 'TopLeft'
 Print
 _:Rectangle
 ObjectClass:FieldOffset
 'BottomRight'
 Print
 _:Object
 ObjectClass:InstanceSize
 Print
 _:Point
 ObjectClass:InstanceSize
 Print
 _:Rectangle
 ObjectClass:InstanceSize
 Print
 _:Foo
 ObjectClass:InstanceSize
 Print
 _:Bar
 ObjectClass:InstanceSize
 Print
 Point::
 0
 0
 Point:Print
 Point::
 0
 0
 Point:Print
 Point:0
 P1
 pop:Word:SetValuePrim
 Point:0
 P2
 pop:Word:SetValuePrim
 Point::
 1
 1
 P3
 pop:Word:SetValuePrim
 Point:XY
 (
  2
  2
 )
 P4
 pop:Word:SetValuePrim
 Point:OF
 P4
 P5
 pop:Word:SetValuePrim
 (
  P3
  Point:+
  P4
 )
 P6
 pop:Word:SetValue
 (
  P3
  Point:-
  P4
 )
 P7
 pop:Word:SetValue
 (
  P4
  Point:-
  P3
 )
 P8
 pop:Word:SetValue
 (
  P4
  Point:Neg
 )
 P9
 pop:Word:SetValue
 (
  P3
  Point:Neg
 )
 P10
 pop:Word:SetValue
 Point:XY
 (
  -2
  2
 )
 P11
 pop:Word:SetValuePrim
 P1
 O1
 pop:Word:SetValuePrim
 O1
 Object:Print
 O1
 Object:InstanceSize
 Print
 ARRAY [
  P1
  P2
  P3
  P4
  P5
  P6
  P7
  P8
  P9
  P10
  P11
 ]
 l_Points
 pop:Word:SetValue
 P1
 Object:InstanceSize
 Print
 P1
 Object:InstanceSize
 Print
 l_Points
 (
  Point IN aPt
  aPt
  Point:Print
 )
 SWAP
 Array:Iterate
 l_Points
 (
  Point IN aPt
  aPt
  Point:X
  Print
 )
 SWAP
 Array:Iterate
 l_Points
 (
  Point IN aPt
  aPt
  Point:Y
  Print
 )
 SWAP
 Array:Iterate
 l_Points
 (
  Point IN aPt
  aPt
  Object:class
  Print
 )
 SWAP
 Array:Iterate
 l_Points
 (
  Point IN aPt
  aPt
  Object:ClassName
  Print
 )
 SWAP
 Array:Iterate
 l_Points
 (
  Point IN aPt
  aPt
  Object:class
  .Inherited.Words
  (
   ObjectClass IN aClass
   aClass
   ObjectClass:ClassName
   Print
  )
  SWAP
  Array:Iterate
 )
 SWAP
 Array:Iterate
 Rectangle::
 P1
 P4
 R1
 pop:Word:SetValuePrim
 Rectangle::
 P6
 P7
 R2
 pop:Word:SetValuePrim
 R1
 Object:InstanceSize
 Print
 ARRAY [
  R1
  R2
 ]
 l_Rectangles
 pop:Word:SetValue
 l_Rectangles
 (
  Rectangle IN aRt
  aRt
  Rectangle:Print
 )
 SWAP
 Array:Iterate
 l_Rectangles
 (
  Rectangle IN aRt
  aRt
  Object:class
  Print
 )
 SWAP
 Array:Iterate
 l_Rectangles
 (
  Rectangle IN aRt
  aRt
  Object:ClassName
  Print
 )
 SWAP
 Array:Iterate
 l_Rectangles
 (
  Rectangle IN aRt
  aRt
  Object:class
  .Inherited.Words
  (
   ObjectClass IN aClass
   aClass
   ObjectClass:ClassName
   Print
  )
  SWAP
  Array:Iterate
 )
 SWAP
 Array:Iterate
 Object:new
 PointFake
 pop:Word:SetValuePrim
 PointFake
 Print
 'Hello '
 (+)
 'world'
 Print
 1
 (+)
 2
 Print
 10
 (+)
 20
 Print
 0
 (-)
 10
 Print
 Neg
 10
 Print
 Neg
 -10
 Print
; // VOID TestWithDump PointTest

ObjectClass class_impl _:Object
 %CLASS-METHODS %Class-Methods
  'ClassName'
  'FieldOffset'
  'InstanceSize'
  'ClassParent'
  'ClassParentName'
  'Print'
 ; // %CLASS-METHODS %Class-Methods
 
 %CONSTRUCTORS %Constructors
  'new'
 ; // %CONSTRUCTORS %Constructors
 
 %METHODS %Methods
  'ClassName'
  'FieldOffset'
  'InstanceSize'
  'ClassParent'
  'ClassParentName'
  'Print'
  'ToPrintable'
 ; // %METHODS %Methods
 
 %PROPERTIES %Props
  'class'
 ; // %PROPERTIES %Props
 
 ObjectClass STATIC-VAR c:Class:Parent
 FieldOffset STATIC-VAR c:Instance:Size
 INTEGER CONST c:Offset:VMT
  0
 _:Object
 Result
 pop:Word:SetValue
; // ObjectClass class_impl _:Object

PointClass class_impl _:Point
 %CLASS-METHODS %Class-Methods
  'ClassName'
  'FieldOffset'
  'InstanceSize'
  'ClassParent'
  'ClassParentName'
  'Print'
 ; // %CLASS-METHODS %Class-Methods
 
 %CONSTRUCTORS %Constructors
  'new'
  ':'
  '0'
  'XY'
  'OF'
 ; // %CONSTRUCTORS %Constructors
 
 %INHERITS %G
  @
  _:Object
 ; // %INHERITS %G
 
 %METHODS %Methods
  'ClassName'
  'FieldOffset'
  'InstanceSize'
  'ClassParent'
  'ClassParentName'
  'Print'
  'ToPrintable'
  '+'
  'Neg'
  '-'
 ; // %METHODS %Methods
 
 %PROPERTIES %Props
  'class'
  'X'
  'Y'
 ; // %PROPERTIES %Props
 
 ObjectClass STATIC-VAR c:Class:Parent
 FieldOffset STATIC-VAR c:Instance:Size
 INTEGER CONST c:Offset:VMT
  0
 INTEGER CONST c:Offset:X
  1
 INTEGER CONST c:Offset:Y
  2
 _:Point
 Result
 pop:Word:SetValue
; // PointClass class_impl _:Point

RectangleClass class_impl _:Rectangle
 %CLASS-METHODS %Class-Methods
  'ClassName'
  'FieldOffset'
  'InstanceSize'
  'ClassParent'
  'ClassParentName'
  'Print'
 ; // %CLASS-METHODS %Class-Methods
 
 %CONSTRUCTORS %Constructors
  'new'
  ':'
 ; // %CONSTRUCTORS %Constructors
 
 %INHERITS %G
  @
  _:Object
 ; // %INHERITS %G
 
 %METHODS %Methods
  'ClassName'
  'FieldOffset'
  'InstanceSize'
  'ClassParent'
  'ClassParentName'
  'Print'
  'ToPrintable'
 ; // %METHODS %Methods
 
 %PROPERTIES %Props
  'class'
  'TopLeft'
  'BottomRight'
 ; // %PROPERTIES %Props
 
 ObjectClass STATIC-VAR c:Class:Parent
 FieldOffset STATIC-VAR c:Instance:Size
 INTEGER CONST c:Offset:BottomRight
  2
 INTEGER CONST c:Offset:TopLeft
  1
 INTEGER CONST c:Offset:VMT
  0
 _:Rectangle
 Result
 pop:Word:SetValue
; // RectangleClass class_impl _:Rectangle

0
0
0
0
0
<base>
Object
Object
Object
Object
<nil>
_:Object
_:Object
_:Object
_:Object
1
2
1
2
1
3
3
1
1
( X: 0, Y: 0 )
( X: 0, Y: 0 )
Point : [ TkwCompiledFunction 0 0 ]
3
3
3
( X: 0, Y: 0 )
( X: 0, Y: 0 )
( X: 1, Y: 1 )
( X: 2, Y: 2 )
( X: 2, Y: 2 )
( X: 3, Y: 3 )
( X: -1, Y: -1 )
( X: 1, Y: 1 )
( X: -2, Y: -2 )
( X: -1, Y: -1 )
( X: -2, Y: 2 )
0
0
1
2
2
3
-1
1
-2
-1
-2
0
0
1
2
2
3
-1
1
-2
-1
2
_:Point
_:Point
_:Point
_:Point
_:Point
_:Point
_:Point
_:Point
_:Point
_:Point
_:Point
Point
Point
Point
Point
Point
Point
Point
Point
Point
Point
Point
Object
Object
Object
Object
Object
Object
Object
Object
Object
Object
Object
3
( TopLeft: ( X: 0, Y: 0 ), BottomRight: ( X: 2, Y: 2 ) )
( TopLeft: ( X: 3, Y: 3 ), BottomRight: ( X: -1, Y: -1 ) )
_:Rectangle
_:Rectangle
Rectangle
Rectangle
Object
Object
[ TkwCompiledFunction ]
Hello world
3
30
-10
-10
10
