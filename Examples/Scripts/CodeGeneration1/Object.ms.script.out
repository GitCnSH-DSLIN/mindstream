[ %PROPERTIES TkwGlobalVar ]
[ %PROPERTIES TkwGlobalVar %METHODS TkwGlobalVar ]
[ %PROPERTIES TkwGlobalVar %METHODS TkwGlobalVar %CLASS-METHODS TkwGlobalVar ]
[ %PROPERTIES TkwGlobalVar %METHODS TkwGlobalVar %CLASS-METHODS TkwGlobalVar %CONSTRUCTORS TkwGlobalVar ]
VOID TestWithDump ObjectTest
 IMMEDIATE VOID MACRO .FakeField
  ^@ IN Self
  Self
  'FakeField'
  ExpandMethodName
 ; // IMMEDIATE VOID MACRO .FakeField
 
 Object1Class class_impl _:Object1
  %CLASS-METHODS %Class-Methods
   'ClassName'
   'FieldOffset'
   'InstanceSize'
   'ClassParent'
   'ClassParentName'
   'Print'
  ; // %CLASS-METHODS %Class-Methods
  
  %CONSTRUCTORS %Constructors
   'new'
  ; // %CONSTRUCTORS %Constructors
  
  %INHERITS %G
   @
   _:Object
  ; // %INHERITS %G
  
  %METHODS %Methods
   'ClassName'
   'FieldOffset'
   'InstanceSize'
   'ClassParent'
   'ClassParentName'
   'Print'
   'ToPrintable'
  ; // %METHODS %Methods
  
  %PROPERTIES %Props
   'class'
  ; // %PROPERTIES %Props
  
  ObjectClass STATIC-VAR c:Class:Parent
  FieldOffset STATIC-VAR c:Instance:Size
  INTEGER CONST c:Offset:VMT
   0
  _:Object1
  Result
  pop:Word:SetValue
 ; // Object1Class class_impl _:Object1
 
 Object2Class class_impl _:Object2
  %CLASS-METHODS %Class-Methods
   'ClassName'
   'FieldOffset'
   'InstanceSize'
   'ClassParent'
   'ClassParentName'
   'Print'
  ; // %CLASS-METHODS %Class-Methods
  
  %CONSTRUCTORS %Constructors
   'new'
  ; // %CONSTRUCTORS %Constructors
  
  %INHERITS %G
   @
   _:Object
  ; // %INHERITS %G
  
  %METHODS %Methods
   'ClassName'
   'FieldOffset'
   'InstanceSize'
   'ClassParent'
   'ClassParentName'
   'Print'
   'ToPrintable'
  ; // %METHODS %Methods
  
  %PROPERTIES %Props
   'class'
   'FakeField'
  ; // %PROPERTIES %Props
  
  ObjectClass STATIC-VAR c:Class:Parent
  FieldOffset STATIC-VAR c:Instance:Size
  INTEGER CONST c:Offset:FakeField
   1
  INTEGER CONST c:Offset:VMT
   0
  _:Object2
  Result
  pop:Word:SetValue
 ; // Object2Class class_impl _:Object2
 
 Object3Class class_impl _:Object3
  %CLASS-METHODS %Class-Methods
   'ClassName'
   'FieldOffset'
   'InstanceSize'
   'ClassParent'
   'ClassParentName'
   'Print'
  ; // %CLASS-METHODS %Class-Methods
  
  %CONSTRUCTORS %Constructors
   'new'
  ; // %CONSTRUCTORS %Constructors
  
  %INHERITS %G
   @
   _:Object2
  ; // %INHERITS %G
  
  %METHODS %Methods
   'ClassName'
   'FieldOffset'
   'InstanceSize'
   'ClassParent'
   'ClassParentName'
   'Print'
   'ToPrintable'
  ; // %METHODS %Methods
  
  %PROPERTIES %Props
   'class'
   'FakeField'
  ; // %PROPERTIES %Props
  
  ObjectClass STATIC-VAR c:Class:Parent
  FieldOffset STATIC-VAR c:Instance:Size
  INTEGER CONST c:Offset:FakeField
   1
  INTEGER CONST c:Offset:VMT
   0
  _:Object3
  Result
  pop:Word:SetValue
 ; // Object3Class class_impl _:Object3
 
 Object4Class class_impl _:Object4
  %CLASS-METHODS %Class-Methods
   'ClassName'
   'FieldOffset'
   'InstanceSize'
   'ClassParent'
   'ClassParentName'
   'Print'
  ; // %CLASS-METHODS %Class-Methods
  
  %CONSTRUCTORS %Constructors
   'new'
  ; // %CONSTRUCTORS %Constructors
  
  %INHERITS %G
   @
   _:Object
  ; // %INHERITS %G
  
  %METHODS %Methods
   'ClassName'
   'FieldOffset'
   'InstanceSize'
   'ClassParent'
   'ClassParentName'
   'Print'
   'ToPrintable'
  ; // %METHODS %Methods
  
  %PROPERTIES %Props
   'class'
  ; // %PROPERTIES %Props
  
  ObjectClass STATIC-VAR c:Class:Parent
  FieldOffset STATIC-VAR c:Instance:Size
  INTEGER CONST c:Offset:VMT
   0
  _:Object4
  Result
  pop:Word:SetValue
 ; // Object4Class class_impl _:Object4
 
 Object1Class class_impl _:Object1
  %CLASS-METHODS %Class-Methods
   'ClassName'
   'FieldOffset'
   'InstanceSize'
   'ClassParent'
   'ClassParentName'
   'Print'
  ; // %CLASS-METHODS %Class-Methods
  
  %CONSTRUCTORS %Constructors
   'new'
  ; // %CONSTRUCTORS %Constructors
  
  %INHERITS %G
   @
   _:Object
  ; // %INHERITS %G
  
  %METHODS %Methods
   'ClassName'
   'FieldOffset'
   'InstanceSize'
   'ClassParent'
   'ClassParentName'
   'Print'
   'ToPrintable'
  ; // %METHODS %Methods
  
  %PROPERTIES %Props
   'class'
  ; // %PROPERTIES %Props
  
  ObjectClass STATIC-VAR c:Class:Parent
  FieldOffset STATIC-VAR c:Instance:Size
  INTEGER CONST c:Offset:VMT
   0
  _:Object1
  Result
  pop:Word:SetValue
 ; // Object1Class class_impl _:Object1
 
 Object2Class class_impl _:Object2
  %CLASS-METHODS %Class-Methods
   'ClassName'
   'FieldOffset'
   'InstanceSize'
   'ClassParent'
   'ClassParentName'
   'Print'
  ; // %CLASS-METHODS %Class-Methods
  
  %CONSTRUCTORS %Constructors
   'new'
  ; // %CONSTRUCTORS %Constructors
  
  %INHERITS %G
   @
   _:Object
  ; // %INHERITS %G
  
  %METHODS %Methods
   'ClassName'
   'FieldOffset'
   'InstanceSize'
   'ClassParent'
   'ClassParentName'
   'Print'
   'ToPrintable'
  ; // %METHODS %Methods
  
  %PROPERTIES %Props
   'class'
   'FakeField'
  ; // %PROPERTIES %Props
  
  ObjectClass STATIC-VAR c:Class:Parent
  FieldOffset STATIC-VAR c:Instance:Size
  INTEGER CONST c:Offset:FakeField
   1
  INTEGER CONST c:Offset:VMT
   0
  _:Object2
  Result
  pop:Word:SetValue
 ; // Object2Class class_impl _:Object2
 
 Object3Class class_impl _:Object3
  %CLASS-METHODS %Class-Methods
   'ClassName'
   'FieldOffset'
   'InstanceSize'
   'ClassParent'
   'ClassParentName'
   'Print'
  ; // %CLASS-METHODS %Class-Methods
  
  %CONSTRUCTORS %Constructors
   'new'
  ; // %CONSTRUCTORS %Constructors
  
  %INHERITS %G
   @
   _:Object2
  ; // %INHERITS %G
  
  %METHODS %Methods
   'ClassName'
   'FieldOffset'
   'InstanceSize'
   'ClassParent'
   'ClassParentName'
   'Print'
   'ToPrintable'
  ; // %METHODS %Methods
  
  %PROPERTIES %Props
   'class'
   'FakeField'
  ; // %PROPERTIES %Props
  
  ObjectClass STATIC-VAR c:Class:Parent
  FieldOffset STATIC-VAR c:Instance:Size
  INTEGER CONST c:Offset:FakeField
   1
  INTEGER CONST c:Offset:VMT
   0
  _:Object3
  Result
  pop:Word:SetValue
 ; // Object3Class class_impl _:Object3
 
 Object4Class class_impl _:Object4
  %CLASS-METHODS %Class-Methods
   'ClassName'
   'FieldOffset'
   'InstanceSize'
   'ClassParent'
   'ClassParentName'
   'Print'
  ; // %CLASS-METHODS %Class-Methods
  
  %CONSTRUCTORS %Constructors
   'new'
  ; // %CONSTRUCTORS %Constructors
  
  %INHERITS %G
   @
   _:Object
  ; // %INHERITS %G
  
  %METHODS %Methods
   'ClassName'
   'FieldOffset'
   'InstanceSize'
   'ClassParent'
   'ClassParentName'
   'Print'
   'ToPrintable'
  ; // %METHODS %Methods
  
  %PROPERTIES %Props
   'class'
  ; // %PROPERTIES %Props
  
  ObjectClass STATIC-VAR c:Class:Parent
  FieldOffset STATIC-VAR c:Instance:Size
  INTEGER CONST c:Offset:VMT
   0
  _:Object4
  Result
  pop:Word:SetValue
 ; // Object4Class class_impl _:Object4
 
 Object VAR l_Obj
 Object1 VAR l_Obj1
 Object2 VAR l_Obj2
 Object3 VAR l_Obj3
 Object4 VAR l_Obj4
 IMMEDIATE VOID TYPE Object1
  TtfwValueTypes
  Ctx:IncludeValueTypes
 ; // IMMEDIATE VOID TYPE Object1
 
 ObjectClass readonly Object:class
  Object IN Self
  Self
  FieldByOffset
  ^@ (
   _:Object _:Object pop:Word:SetValue ::
   'c:Offset:VMT'
  )
  Result
  pop:Word:SetValue
 ; // ObjectClass readonly Object:class
 
 STRING method Object:ClassName
  Object IN Self
  Self
  Object:class
  ObjectClass:ClassName
  Result
  pop:Word:SetValue
 ; // STRING method Object:ClassName
 
 ObjectClass method Object:ClassParent
  Object IN Self
  Self
  Object:class
  ObjectClass:ClassParent
  Result
  pop:Word:SetValue
 ; // ObjectClass method Object:ClassParent
 
 STRING method Object:ClassParentName
  Object IN Self
  Self
  Object:class
  ObjectClass:ClassParentName
  Result
  pop:Word:SetValue
 ; // STRING method Object:ClassParentName
 
 FieldOffset method Object:FieldOffset
  Object IN Self
  Self
  Object:class
  ObjectClass:FieldOffset
  '>>>'
  Result
 ; // FieldOffset method Object:FieldOffset
 
 INTEGER method Object:InstanceSize
  Object IN Self
  Self
  Object:class
  ObjectClass:InstanceSize
  Result
  pop:Word:SetValue
 ; // INTEGER method Object:InstanceSize
 
 Object1 constructor Object1:new
  ARRAY [
   @
   _:Object1
  ]
  Result
  pop:Word:SetValue
 ; // Object1 constructor Object1:new
 
 REDIFINITION VIRTUAL VOID method Object:Print
  Object IN Self
  Self
  Object:ToPrintable
  Print
 ; // REDIFINITION VIRTUAL VOID method Object:Print
 
 VIRTUAL STRING method Object:ToPrintable
  Object IN Self
  Self
  ToPrintable
  Result
  pop:Word:SetValue
  ARRAY [
   Self
   Object:ClassName
   ' : '
   Result
  ]
  strings:Cat
  Result
  pop:Word:SetValue
 ; // VIRTUAL STRING method Object:ToPrintable
 
 IMMEDIATE VOID TYPE Object1Class
  TtfwValueTypes
  Ctx:IncludeValueTypes
 ; // IMMEDIATE VOID TYPE Object1Class
 
 STRING : ObjectClass:ClassName
  %SUMMARY %SUM
   'Возвращает имя класса'
  ; // %SUMMARY %SUM
  
  ObjectClass IN Self
  Self
  |N
  ':'
  string:Split
  Result
  pop:Word:SetValue
  DROP
 ; // STRING : ObjectClass:ClassName
 
 ObjectClass : ObjectClass:ClassParent
  %SUMMARY %SUM
   'Возвращает родительский класс'
  ; // %SUMMARY %SUM
  
  ObjectClass IN Self
  Self
  %%
  ClassParentName
  DO
  Result
  pop:Word:SetValue
 ; // ObjectClass : ObjectClass:ClassParent
 
 STRING : ObjectClass:ClassParentName
  %SUMMARY %SUM
   'Возвращает имя родительского класса'
  ; // %SUMMARY %SUM
  
  ObjectClass VAR l_ClassParent
  ObjectClass IN Self
  Self
  %%
  ClassParentName
  DO
  l_ClassParent
  pop:Word:SetValue
  if
   (
    l_ClassParent
    IsNil
   )
  then
   BEGIN
    '<base>'
    Result
    pop:Word:SetValue
   END
  else
   BEGIN
    l_ClassParent
    ObjectClass:ClassName
    Result
    pop:Word:SetValue
   END
 ; // STRING : ObjectClass:ClassParentName
 
 FieldOffset : ObjectClass:FieldOffset
  %SUMMARY %SUM
   'Вычисляет смещение поля класса'
  ; // %SUMMARY %SUM
  
  ^L IN aFieldName
  STRING VAR l_FieldName
  TtfwWord VAR l_FieldVAR
  ObjectClass IN Self
  aFieldName
  |N
  l_FieldName
  pop:Word:SetValue
  l_FieldName
  MakeFieldOffsetName
  l_FieldName
  pop:Word:SetValue
  Self
  %%
  l_FieldName
  l_FieldVAR
  pop:Word:SetValue
  l_FieldVAR
  IsNil
  ?FAIL
  ARRAY [
   'Поле '
   l_FieldName
   ' на классе '
   Self
   ObjectClass:ClassName
   ' не определено'
  ]
  l_FieldVAR
  DO
  Result
  pop:Word:SetValue
 ; // FieldOffset : ObjectClass:FieldOffset
 
 INTEGER : ObjectClass:InstanceSize
  %SUMMARY %SUM
   'Возвращает размер экземпляров класса'
  ; // %SUMMARY %SUM
  
  ObjectClass IN Self
  Self
  %%
  InstanceSizeName
  DO
  Result
  pop:Word:SetValue
 ; // INTEGER : ObjectClass:InstanceSize
 
 : ObjectClass:Print
  %SUMMARY %SUM
   'Печатает класс'
  ; // %SUMMARY %SUM
  
  ObjectClass IN Self
  if
   (
    Self
    IsNil
   )
  then
   BEGIN
    '<base>'
    .
   END
  else
   BEGIN
    Self
    ObjectClass:ClassName
    .
   END
 ; // : ObjectClass:Print
 
 IMMEDIATE VOID TYPE Object2
  TtfwValueTypes
  Ctx:IncludeValueTypes
 ; // IMMEDIATE VOID TYPE Object2
 
 ObjectClass readonly Object:class
  Object IN Self
  Self
  FieldByOffset
  ^@ (
   _:Object _:Object pop:Word:SetValue ::
   'c:Offset:VMT'
  )
  Result
  pop:Word:SetValue
 ; // ObjectClass readonly Object:class
 
 STRING method Object:ClassName
  Object IN Self
  Self
  Object:class
  ObjectClass:ClassName
  Result
  pop:Word:SetValue
 ; // STRING method Object:ClassName
 
 ObjectClass method Object:ClassParent
  Object IN Self
  Self
  Object:class
  ObjectClass:ClassParent
  Result
  pop:Word:SetValue
 ; // ObjectClass method Object:ClassParent
 
 STRING method Object:ClassParentName
  Object IN Self
  Self
  Object:class
  ObjectClass:ClassParentName
  Result
  pop:Word:SetValue
 ; // STRING method Object:ClassParentName
 
 INTEGER readonly Object2:FakeField
  Object2 IN Self
  Self
  FieldByOffset
  ^@ (
   _:Object2 _:Object2 pop:Word:SetValue ::
   'c:Offset:FakeField'
  )
  Result
  pop:Word:SetValue
 ; // INTEGER readonly Object2:FakeField
 
 FieldOffset method Object:FieldOffset
  Object IN Self
  Self
  Object:class
  ObjectClass:FieldOffset
  '>>>'
  Result
 ; // FieldOffset method Object:FieldOffset
 
 INTEGER method Object:InstanceSize
  Object IN Self
  Self
  Object:class
  ObjectClass:InstanceSize
  Result
  pop:Word:SetValue
 ; // INTEGER method Object:InstanceSize
 
 REDIFINITION Object2 constructor Object2:new
  ARRAY [
   @
   _:Object2
   256
  ]
  Result
  pop:Word:SetValue
 ; // REDIFINITION Object2 constructor Object2:new
 
 REDIFINITION VIRTUAL VOID method Object:Print
  Object IN Self
  Self
  Object:ToPrintable
  Print
 ; // REDIFINITION VIRTUAL VOID method Object:Print
 
 VIRTUAL STRING method Object:ToPrintable
  Object IN Self
  Self
  ToPrintable
  Result
  pop:Word:SetValue
  ARRAY [
   Self
   Object:ClassName
   ' : '
   Result
  ]
  strings:Cat
  Result
  pop:Word:SetValue
 ; // VIRTUAL STRING method Object:ToPrintable
 
 IMMEDIATE VOID TYPE Object2Class
  TtfwValueTypes
  Ctx:IncludeValueTypes
 ; // IMMEDIATE VOID TYPE Object2Class
 
 STRING : ObjectClass:ClassName
  %SUMMARY %SUM
   'Возвращает имя класса'
  ; // %SUMMARY %SUM
  
  ObjectClass IN Self
  Self
  |N
  ':'
  string:Split
  Result
  pop:Word:SetValue
  DROP
 ; // STRING : ObjectClass:ClassName
 
 ObjectClass : ObjectClass:ClassParent
  %SUMMARY %SUM
   'Возвращает родительский класс'
  ; // %SUMMARY %SUM
  
  ObjectClass IN Self
  Self
  %%
  ClassParentName
  DO
  Result
  pop:Word:SetValue
 ; // ObjectClass : ObjectClass:ClassParent
 
 STRING : ObjectClass:ClassParentName
  %SUMMARY %SUM
   'Возвращает имя родительского класса'
  ; // %SUMMARY %SUM
  
  ObjectClass VAR l_ClassParent
  ObjectClass IN Self
  Self
  %%
  ClassParentName
  DO
  l_ClassParent
  pop:Word:SetValue
  if
   (
    l_ClassParent
    IsNil
   )
  then
   BEGIN
    '<base>'
    Result
    pop:Word:SetValue
   END
  else
   BEGIN
    l_ClassParent
    ObjectClass:ClassName
    Result
    pop:Word:SetValue
   END
 ; // STRING : ObjectClass:ClassParentName
 
 FieldOffset : ObjectClass:FieldOffset
  %SUMMARY %SUM
   'Вычисляет смещение поля класса'
  ; // %SUMMARY %SUM
  
  ^L IN aFieldName
  STRING VAR l_FieldName
  TtfwWord VAR l_FieldVAR
  ObjectClass IN Self
  aFieldName
  |N
  l_FieldName
  pop:Word:SetValue
  l_FieldName
  MakeFieldOffsetName
  l_FieldName
  pop:Word:SetValue
  Self
  %%
  l_FieldName
  l_FieldVAR
  pop:Word:SetValue
  l_FieldVAR
  IsNil
  ?FAIL
  ARRAY [
   'Поле '
   l_FieldName
   ' на классе '
   Self
   ObjectClass:ClassName
   ' не определено'
  ]
  l_FieldVAR
  DO
  Result
  pop:Word:SetValue
 ; // FieldOffset : ObjectClass:FieldOffset
 
 INTEGER : ObjectClass:InstanceSize
  %SUMMARY %SUM
   'Возвращает размер экземпляров класса'
  ; // %SUMMARY %SUM
  
  ObjectClass IN Self
  Self
  %%
  InstanceSizeName
  DO
  Result
  pop:Word:SetValue
 ; // INTEGER : ObjectClass:InstanceSize
 
 : ObjectClass:Print
  %SUMMARY %SUM
   'Печатает класс'
  ; // %SUMMARY %SUM
  
  ObjectClass IN Self
  if
   (
    Self
    IsNil
   )
  then
   BEGIN
    '<base>'
    .
   END
  else
   BEGIN
    Self
    ObjectClass:ClassName
    .
   END
 ; // : ObjectClass:Print
 
 IMMEDIATE VOID TYPE Object3
  TtfwValueTypes
  Ctx:IncludeValueTypes
 ; // IMMEDIATE VOID TYPE Object3
 
 ObjectClass readonly Object:class
  Object IN Self
  Self
  FieldByOffset
  ^@ (
   _:Object _:Object pop:Word:SetValue ::
   'c:Offset:VMT'
  )
  Result
  pop:Word:SetValue
 ; // ObjectClass readonly Object:class
 
 STRING method Object:ClassName
  Object IN Self
  Self
  Object:class
  ObjectClass:ClassName
  Result
  pop:Word:SetValue
 ; // STRING method Object:ClassName
 
 ObjectClass method Object:ClassParent
  Object IN Self
  Self
  Object:class
  ObjectClass:ClassParent
  Result
  pop:Word:SetValue
 ; // ObjectClass method Object:ClassParent
 
 STRING method Object:ClassParentName
  Object IN Self
  Self
  Object:class
  ObjectClass:ClassParentName
  Result
  pop:Word:SetValue
 ; // STRING method Object:ClassParentName
 
 INTEGER readonly Object2:FakeField
  Object2 IN Self
  Self
  FieldByOffset
  ^@ (
   _:Object2 _:Object2 pop:Word:SetValue ::
   'c:Offset:FakeField'
  )
  Result
  pop:Word:SetValue
 ; // INTEGER readonly Object2:FakeField
 
 FieldOffset method Object:FieldOffset
  Object IN Self
  Self
  Object:class
  ObjectClass:FieldOffset
  '>>>'
  Result
 ; // FieldOffset method Object:FieldOffset
 
 INTEGER method Object:InstanceSize
  Object IN Self
  Self
  Object:class
  ObjectClass:InstanceSize
  Result
  pop:Word:SetValue
 ; // INTEGER method Object:InstanceSize
 
 REDIFINITION Object3 constructor Object3:new
  ARRAY [
   @
   _:Object3
   257
  ]
  Result
  pop:Word:SetValue
 ; // REDIFINITION Object3 constructor Object3:new
 
 REDIFINITION VIRTUAL VOID method Object:Print
  Object IN Self
  Self
  Object:ToPrintable
  Print
 ; // REDIFINITION VIRTUAL VOID method Object:Print
 
 VIRTUAL STRING method Object:ToPrintable
  Object IN Self
  Self
  ToPrintable
  Result
  pop:Word:SetValue
  ARRAY [
   Self
   Object:ClassName
   ' : '
   Result
  ]
  strings:Cat
  Result
  pop:Word:SetValue
 ; // VIRTUAL STRING method Object:ToPrintable
 
 IMMEDIATE VOID TYPE Object3Class
  TtfwValueTypes
  Ctx:IncludeValueTypes
 ; // IMMEDIATE VOID TYPE Object3Class
 
 STRING : ObjectClass:ClassName
  %SUMMARY %SUM
   'Возвращает имя класса'
  ; // %SUMMARY %SUM
  
  ObjectClass IN Self
  Self
  |N
  ':'
  string:Split
  Result
  pop:Word:SetValue
  DROP
 ; // STRING : ObjectClass:ClassName
 
 ObjectClass : ObjectClass:ClassParent
  %SUMMARY %SUM
   'Возвращает родительский класс'
  ; // %SUMMARY %SUM
  
  ObjectClass IN Self
  Self
  %%
  ClassParentName
  DO
  Result
  pop:Word:SetValue
 ; // ObjectClass : ObjectClass:ClassParent
 
 STRING : ObjectClass:ClassParentName
  %SUMMARY %SUM
   'Возвращает имя родительского класса'
  ; // %SUMMARY %SUM
  
  ObjectClass VAR l_ClassParent
  ObjectClass IN Self
  Self
  %%
  ClassParentName
  DO
  l_ClassParent
  pop:Word:SetValue
  if
   (
    l_ClassParent
    IsNil
   )
  then
   BEGIN
    '<base>'
    Result
    pop:Word:SetValue
   END
  else
   BEGIN
    l_ClassParent
    ObjectClass:ClassName
    Result
    pop:Word:SetValue
   END
 ; // STRING : ObjectClass:ClassParentName
 
 FieldOffset : ObjectClass:FieldOffset
  %SUMMARY %SUM
   'Вычисляет смещение поля класса'
  ; // %SUMMARY %SUM
  
  ^L IN aFieldName
  STRING VAR l_FieldName
  TtfwWord VAR l_FieldVAR
  ObjectClass IN Self
  aFieldName
  |N
  l_FieldName
  pop:Word:SetValue
  l_FieldName
  MakeFieldOffsetName
  l_FieldName
  pop:Word:SetValue
  Self
  %%
  l_FieldName
  l_FieldVAR
  pop:Word:SetValue
  l_FieldVAR
  IsNil
  ?FAIL
  ARRAY [
   'Поле '
   l_FieldName
   ' на классе '
   Self
   ObjectClass:ClassName
   ' не определено'
  ]
  l_FieldVAR
  DO
  Result
  pop:Word:SetValue
 ; // FieldOffset : ObjectClass:FieldOffset
 
 INTEGER : ObjectClass:InstanceSize
  %SUMMARY %SUM
   'Возвращает размер экземпляров класса'
  ; // %SUMMARY %SUM
  
  ObjectClass IN Self
  Self
  %%
  InstanceSizeName
  DO
  Result
  pop:Word:SetValue
 ; // INTEGER : ObjectClass:InstanceSize
 
 : ObjectClass:Print
  %SUMMARY %SUM
   'Печатает класс'
  ; // %SUMMARY %SUM
  
  ObjectClass IN Self
  if
   (
    Self
    IsNil
   )
  then
   BEGIN
    '<base>'
    .
   END
  else
   BEGIN
    Self
    ObjectClass:ClassName
    .
   END
 ; // : ObjectClass:Print
 
 IMMEDIATE VOID TYPE Object4
  TtfwValueTypes
  Ctx:IncludeValueTypes
 ; // IMMEDIATE VOID TYPE Object4
 
 ObjectClass readonly Object:class
  Object IN Self
  Self
  FieldByOffset
  ^@ (
   _:Object _:Object pop:Word:SetValue ::
   'c:Offset:VMT'
  )
  Result
  pop:Word:SetValue
 ; // ObjectClass readonly Object:class
 
 STRING method Object:ClassName
  Object IN Self
  Self
  Object:class
  ObjectClass:ClassName
  Result
  pop:Word:SetValue
 ; // STRING method Object:ClassName
 
 ObjectClass method Object:ClassParent
  Object IN Self
  Self
  Object:class
  ObjectClass:ClassParent
  Result
  pop:Word:SetValue
 ; // ObjectClass method Object:ClassParent
 
 STRING method Object:ClassParentName
  Object IN Self
  Self
  Object:class
  ObjectClass:ClassParentName
  Result
  pop:Word:SetValue
 ; // STRING method Object:ClassParentName
 
 FieldOffset method Object:FieldOffset
  Object IN Self
  Self
  Object:class
  ObjectClass:FieldOffset
  '>>>'
  Result
 ; // FieldOffset method Object:FieldOffset
 
 INTEGER method Object:InstanceSize
  Object IN Self
  Self
  Object:class
  ObjectClass:InstanceSize
  Result
  pop:Word:SetValue
 ; // INTEGER method Object:InstanceSize
 
 Object4 constructor Object4:new
  ARRAY [
   @
   _:Object4
  ]
  Result
  pop:Word:SetValue
 ; // Object4 constructor Object4:new
 
 REDIFINITION VIRTUAL VOID method Object:Print
  Object IN Self
  Self
  Object:ToPrintable
  Print
 ; // REDIFINITION VIRTUAL VOID method Object:Print
 
 VIRTUAL STRING method Object:ToPrintable
  Object IN Self
  Self
  ToPrintable
  Result
  pop:Word:SetValue
  ARRAY [
   Self
   Object:ClassName
   ' : '
   Result
  ]
  strings:Cat
  Result
  pop:Word:SetValue
 ; // VIRTUAL STRING method Object:ToPrintable
 
 IMMEDIATE VOID TYPE Object4Class
  TtfwValueTypes
  Ctx:IncludeValueTypes
 ; // IMMEDIATE VOID TYPE Object4Class
 
 STRING : ObjectClass:ClassName
  %SUMMARY %SUM
   'Возвращает имя класса'
  ; // %SUMMARY %SUM
  
  ObjectClass IN Self
  Self
  |N
  ':'
  string:Split
  Result
  pop:Word:SetValue
  DROP
 ; // STRING : ObjectClass:ClassName
 
 ObjectClass : ObjectClass:ClassParent
  %SUMMARY %SUM
   'Возвращает родительский класс'
  ; // %SUMMARY %SUM
  
  ObjectClass IN Self
  Self
  %%
  ClassParentName
  DO
  Result
  pop:Word:SetValue
 ; // ObjectClass : ObjectClass:ClassParent
 
 STRING : ObjectClass:ClassParentName
  %SUMMARY %SUM
   'Возвращает имя родительского класса'
  ; // %SUMMARY %SUM
  
  ObjectClass VAR l_ClassParent
  ObjectClass IN Self
  Self
  %%
  ClassParentName
  DO
  l_ClassParent
  pop:Word:SetValue
  if
   (
    l_ClassParent
    IsNil
   )
  then
   BEGIN
    '<base>'
    Result
    pop:Word:SetValue
   END
  else
   BEGIN
    l_ClassParent
    ObjectClass:ClassName
    Result
    pop:Word:SetValue
   END
 ; // STRING : ObjectClass:ClassParentName
 
 FieldOffset : ObjectClass:FieldOffset
  %SUMMARY %SUM
   'Вычисляет смещение поля класса'
  ; // %SUMMARY %SUM
  
  ^L IN aFieldName
  STRING VAR l_FieldName
  TtfwWord VAR l_FieldVAR
  ObjectClass IN Self
  aFieldName
  |N
  l_FieldName
  pop:Word:SetValue
  l_FieldName
  MakeFieldOffsetName
  l_FieldName
  pop:Word:SetValue
  Self
  %%
  l_FieldName
  l_FieldVAR
  pop:Word:SetValue
  l_FieldVAR
  IsNil
  ?FAIL
  ARRAY [
   'Поле '
   l_FieldName
   ' на классе '
   Self
   ObjectClass:ClassName
   ' не определено'
  ]
  l_FieldVAR
  DO
  Result
  pop:Word:SetValue
 ; // FieldOffset : ObjectClass:FieldOffset
 
 INTEGER : ObjectClass:InstanceSize
  %SUMMARY %SUM
   'Возвращает размер экземпляров класса'
  ; // %SUMMARY %SUM
  
  ObjectClass IN Self
  Self
  %%
  InstanceSizeName
  DO
  Result
  pop:Word:SetValue
 ; // INTEGER : ObjectClass:InstanceSize
 
 : ObjectClass:Print
  %SUMMARY %SUM
   'Печатает класс'
  ; // %SUMMARY %SUM
  
  ObjectClass IN Self
  if
   (
    Self
    IsNil
   )
  then
   BEGIN
    '<base>'
    .
   END
  else
   BEGIN
    Self
    ObjectClass:ClassName
    .
   END
 ; // : ObjectClass:Print
 
 ObjectTest
 DumpElement
 _:Object
 DumpElement
 _:Object
 pop:Word:Name
 Print
 Object:new
 l_Obj
 pop:Word:SetValuePrim
 l_Obj
 Object:Print
 l_Obj
 Object:ClassName
 Print
 l_Obj
 Object:ClassName
 Print
 _:Object
 pop:Word:Name
 Print
 '--------'
 Print
 l_Obj
 Object:InstanceSize
 Print
 _:Object
 ObjectClass:FieldOffset
 'VMT'
 Print
 _:Object
 ObjectClass:ClassParent
 Print
 _:Object
 ObjectClass:ClassParent
 ObjectClass:Print
 _:Object
 ObjectClass:ClassParentName
 Print
 _:Object
 pop:Word:Name
 Print
 _:Object
 pop:Word:Name
 Print
 l_Obj
 Object:class
 Print
 l_Obj
 Object:class
 ObjectClass:Print
 Object1:new
 l_Obj1
 pop:Word:SetValuePrim
 l_Obj1
 Object:Print
 l_Obj1
 Object:ClassName
 Print
 '--------'
 Print
 l_Obj1
 Object:InstanceSize
 Print
 _:Object1
 ObjectClass:FieldOffset
 'VMT'
 Print
 _:Object1
 ObjectClass:ClassParent
 Print
 _:Object1
 ObjectClass:ClassParent
 ObjectClass:Print
 _:Object1
 ObjectClass:ClassParentName
 Print
 l_Obj1
 Object:class
 Print
 l_Obj1
 Object:class
 ObjectClass:Print
 Object2:new
 l_Obj2
 pop:Word:SetValuePrim
 l_Obj2
 Object:Print
 l_Obj2
 Object:ClassName
 Print
 '--------'
 Print
 l_Obj2
 Object:InstanceSize
 Print
 _:Object2
 ObjectClass:FieldOffset
 'VMT'
 Print
 _:Object2
 ObjectClass:FieldOffset
 'FakeField'
 Print
 _:Object2
 ObjectClass:ClassParent
 Print
 _:Object2
 ObjectClass:ClassParent
 ObjectClass:Print
 _:Object2
 ObjectClass:ClassParentName
 Print
 _:Object2
 ObjectClass:FieldOffset
 'FakeField'
 Print
 l_Obj2
 Object2:FakeField
 Print
 l_Obj2
 Object:class
 Print
 l_Obj2
 Object:class
 ObjectClass:Print
 '--------'
 Print
 _:Object3
 Print
 _:Object3
 ObjectClass:ClassName
 Print
 _:Object3
 ObjectClass:ClassParent
 Print
 _:Object3
 ObjectClass:ClassParentName
 Print
 '--------'
 Print
 _:Object3
 ObjectClass:Print
 _:Object3
 ObjectClass:ClassName
 Print
 _:Object3
 ObjectClass:ClassParent
 Print
 _:Object3
 ObjectClass:ClassParentName
 Print
 Object3:new
 l_Obj3
 pop:Word:SetValuePrim
 l_Obj3
 Object:Print
 l_Obj3
 Object:ClassName
 Print
 '--------'
 Print
 l_Obj3
 Object:InstanceSize
 Print
 _:Object3
 ObjectClass:FieldOffset
 'VMT'
 Print
 _:Object3
 ObjectClass:FieldOffset
 'FakeField'
 Print
 _:Object3
 ObjectClass:ClassParent
 Print
 _:Object3
 ObjectClass:ClassParent
 ObjectClass:Print
 _:Object3
 ObjectClass:ClassParentName
 Print
 _:Object3
 ObjectClass:FieldOffset
 'FakeField'
 Print
 l_Obj3
 Object2:FakeField
 Print
 l_Obj3
 Object:class
 Print
 l_Obj3
 Object:class
 ObjectClass:Print
 Object4:new
 l_Obj4
 pop:Word:SetValuePrim
 l_Obj4
 Object:Print
 l_Obj4
 Object:ClassName
 Print
 '--------'
 Print
 l_Obj4
 Object:InstanceSize
 Print
 _:Object4
 ObjectClass:FieldOffset
 'VMT'
 Print
 _:Object4
 ObjectClass:ClassParent
 Print
 _:Object4
 ObjectClass:ClassParent
 ObjectClass:Print
 _:Object4
 ObjectClass:ClassParentName
 Print
 l_Obj4
 Object:class
 Print
 l_Obj4
 Object:class
 ObjectClass:Print
; // VOID TestWithDump ObjectTest

ObjectClass class_impl _:Object
 %CLASS-METHODS %Class-Methods
  'ClassName'
  'FieldOffset'
  'InstanceSize'
  'ClassParent'
  'ClassParentName'
  'Print'
 ; // %CLASS-METHODS %Class-Methods
 
 %CONSTRUCTORS %Constructors
  'new'
 ; // %CONSTRUCTORS %Constructors
 
 %METHODS %Methods
  'ClassName'
  'FieldOffset'
  'InstanceSize'
  'ClassParent'
  'ClassParentName'
  'Print'
  'ToPrintable'
 ; // %METHODS %Methods
 
 %PROPERTIES %Props
  'class'
 ; // %PROPERTIES %Props
 
 ObjectClass STATIC-VAR c:Class:Parent
 FieldOffset STATIC-VAR c:Instance:Size
 INTEGER CONST c:Offset:VMT
  0
 _:Object
 Result
 pop:Word:SetValue
; // ObjectClass class_impl _:Object

_:Object
Object : [ TkwCompiledFunction ]
Object
Object
_:Object
--------
1
0
<nil>
<base>
<base>
_:Object
_:Object
_:Object
Object
Object1 : [ TkwCompiledFunction ]
Object1
--------
1
0
_:Object
Object
Object
_:Object1
Object1
Object2 : [ TkwCompiledFunction 256 ]
Object2
--------
2
0
1
_:Object
Object
Object
1
256
_:Object2
Object2
--------
_:Object3
Object3
_:Object2
Object2
--------
Object3
Object3
_:Object2
Object2
Object3 : [ TkwCompiledFunction 257 ]
Object3
--------
2
0
1
_:Object2
Object2
Object2
1
257
_:Object3
Object3
Object4 : [ TkwCompiledFunction ]
Object4
--------
1
0
_:Object
Object
Object
_:Object4
Object4
