VOID TestWithDump FilterTest
 BOOLEAN FUNCTION IsEven
  INTEGER IN aValue
  aValue
  2
  MOD
  0
  ==
  >>>
  Result
 ; // BOOLEAN FUNCTION IsEven
 
 STRING FUNCTION ToPrintableEx
  IN aValue
  if
   (
    aValue
    IsArray
   )
  then
   (
    [
     INTEGER VAR l_SL
     '[ '
     l_SL :=
     StackLevel
     for
     aValue
     (
      INTEGER VAR l_Delta
      l_Delta :=
      (
       StackLevel
       l_SL
       -
      )
      if
       (
        l_Delta
        =
        1
       )
      then
       (
        ToPrintableEx
        DO
       )
      else
       (
        INTEGER VAR l_Index
        l_Index :=
        l_Delta
        '{ '
        l_Delta
        LOOP
        (
         l_Index
         ROLL
         ToPrintableEx
         DO
        )
        '}'
       )
      l_SL :=
      StackLevel
     )
     ']'
    ]
    ' '
    strings:CatSep
    >>>
    Result
   )
  else
   (
    aValue
    ToPrintable
    >>>
    Result
   )
 ; // STRING FUNCTION ToPrintableEx
 
 FilterTest
 DumpElement
 [
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
 ]
 .filter>
 IsEven
 .
 SWAP
 Array:Iterate
 [
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
 ]
 .filter>
 IsEven
 .
 [
  1
  10
  2
  9
  3
  8
  4
  7
  5
  6
  6
  5
  7
  4
  8
  3
  9
  2
  10
  1
 ]
 .slice>
 2
 .filter>
 (
  INTEGER IN A
  INTEGER IN B
  A
  IsEven
 )
 (
  .
  .
  '---'
  .
 )
 SWAP
 Array:Iterate
 [
  1
  10
  2
  9
 ]
 .slice>
 2
 .filter>
 (
  INTEGER IN A
  INTEGER IN B
  A
  IsEven
 )
 ToPrintableEx
 .
 [
  1
  2
 ]
 ToPrintableEx
 .
 [
  1
  10
  2
  9
  3
  8
  4
  7
 ]
 .slice>
 2
 .filter>
 (
  INTEGER IN A
  INTEGER IN B
  A
  IsEven
 )
 ToPrintableEx
 .
 [
  1
  10
  2
  9
 ]
 .slice>
 2
 .filter>
 (
  INTEGER IN A
  INTEGER IN B
  A
  IsEven
 )
 .
 [
  1
  10
  2
  9
  3
  8
  4
  7
  5
  6
  6
  5
  7
  4
  8
  3
  9
  2
  10
  1
 ]
 .slice>
 2
 .filter>
 (
  INTEGER IN A
  INTEGER IN B
  A
  IsEven
 )
 ToPrintableEx
 .
 [
  1
  10
  2
  9
  3
  8
  4
  7
  5
  6
  6
  5
  7
  4
  8
  3
  9
  2
  10
  1
 ]
 .slice>
 2
 .filter>
 (
  INTEGER IN A
  INTEGER IN B
  A
  IsEven
 )
 .
; // VOID TestWithDump FilterTest

2
4
6
8
10
[ 2 4 6 8 10 ]
9
2
---
7
4
---
5
6
---
3
8
---
1
10
---
[ { 2 9 } ]
[ 1 2 ]
[ { 2 9 } { 4 7 } ]
[ { 2 9 } ]
[ { 2 9 } { 4 7 } { 6 5 } { 8 3 } { 10 1 } ]
[ { 2 9 } { 4 7 } { 6 5 } { 8 3 } { 10 1 } ]
