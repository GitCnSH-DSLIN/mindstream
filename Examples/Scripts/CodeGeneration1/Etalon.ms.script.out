VOID TestWithDump Etalon.ms.script.test
 STRING CONST cCompareUtilCmd
  'q:\afc.cmd'
 VOID PROCEDURE Etalon
  ^ IN aLambda
  VOID PROCEDURE EtalonPrim
   aLambda
   Etalon.do
   INC
   l_EtalonCount
   l_Level
   g_EtalonPath
   l_EtalonCount
   Array:Item
   pop:Word:SetValuePrim
  ; // VOID PROCEDURE EtalonPrim
  
  INTEGER VAR l_EtalonCount
  INTEGER VAR l_Level
  BOOLEAN VAR l_SameLevel
  SaveVarAndDo
  g_EtalonLevel
  (
   INC
   g_EtalonLevel
   g_EtalonPath
   Array:Count
   l_Level
   pop:Word:SetValue
   l_Level
   g_EtalonLevel
   ==
   l_SameLevel
   pop:Word:SetValue
   if
    l_SameLevel
   then
    BEGIN
     DEC
     l_Level
     l_Level
     g_EtalonPath
     Array:Item
     l_EtalonCount
     pop:Word:SetValue
     EtalonPrim
    END
   else
    BEGIN
     SaveVarAndDo
     g_EtalonPath
     (
      0
      l_EtalonCount
      pop:Word:SetValue
      l_EtalonCount
      >>>[]
      g_EtalonPath
      aLambda
      Etalon.do
      INC
      l_EtalonCount
      l_Level
      g_EtalonPath
      l_EtalonCount
      Array:Item
      pop:Word:SetValuePrim
     )
    END
  )
 ; // VOID PROCEDURE Etalon
 
 VOID PROCEDURE Etalon.do
  IN aLambda
  STRING CONST cPathSep
   '\'
  STRING CONST cPrnExt
   '.prn'
  VOID PROCEDURE DeleteEmptyFile
   STRING IN aFileName
   aFileName
   FileIsEmpty
   ?
   (
    aFileName
    sysutils:FileExists
    ?
    (
     aFileName
     DeleteFile
     DROP
    )
   )
  ; // VOID PROCEDURE DeleteEmptyFile
  
  BOOLEAN FUNCTION FileIsEmpty
   STRING IN aFileName
   aFileName
   FileSize
   0
   ==
   Result
   pop:Word:SetValue
  ; // BOOLEAN FUNCTION FileIsEmpty
  
  STRING VAR l_CurrentDir
  STRING VAR l_EtalonFileName
  STRING VAR l_OutDir
  STRING VAR l_OutFileName
  VOID PROCEDURE Out
   IN aValue
   g_OutFile
   IsNil
   ?FAIL
   'Файл для вывода не открыт'
   aValue
   ToPrintable
   g_OutFile
   File:WriteLn
  ; // VOID PROCEDURE Out
  
  script:FileName
  sysutils:ExtractFilePath
  l_CurrentDir
  pop:Word:SetValue
  script:FileName
  sysutils:ExtractFileName
  l_EtalonFileName
  pop:Word:SetValue
  if
   (
    l_CurrentDir
    IsNil
   )
  then
   BEGIN
    sysutils:GetCurrentDir
    l_CurrentDir
    pop:Word:SetValue
   END
  ARRAY [
   l_EtalonFileName
   ARRAY [
    g_EtalonPath
    IntToStr
    SWAP
    Array:Map
    (
     '.'
     SWAP
     Cat
    )
    SWAP
    Array:Iterate
   ]
   strings:Cat
  ]
  strings:Cat
  l_EtalonFileName
  pop:Word:SetValue
  l_EtalonFileName
  l_OutFileName
  pop:Word:SetValue
  l_OutFileName
  cPrnExt
  Cat
  l_OutFileName
  pop:Word:SetValue
  ARRAY [
   l_CurrentDir
   'Etalons'
   ARRAY [
    l_EtalonFileName
    cPrnExt
    '.etalon'
   ]
   strings:Cat
  ]
  cPathSep
  strings:CatSep
  l_EtalonFileName
  pop:Word:SetValue
  ARRAY [
   l_CurrentDir
   'Out'
  ]
  cPathSep
  strings:CatSep
  l_OutDir
  pop:Word:SetValue
  l_OutDir
  sysutils:ForceDirectories
  ?ASSURE
  ARRAY [
   'Не удалось создать директорию '
   l_OutDir
  ]
  ARRAY [
   l_OutDir
   l_OutFileName
  ]
  cPathSep
  strings:CatSep
  l_OutFileName
  pop:Word:SetValue
  SaveVarAndDo
  g_OutFile
  (
   l_OutFileName
   File:OpenWrite
   g_OutFile
   pop:Word:SetValue
   DumpStackTo
   ARRAY (
    g_EtalonPath
   )
   Out
   DumpStackTo
   (
    aLambda
    DO
   )
   Out
   nil
   g_OutFile
   pop:Word:SetValue
  )
  if
   (
    l_EtalonFileName
    sysutils:FileExists
   )
  then
   BEGIN
    ''
    l_EtalonFileName
    l_OutFileName
    CompareFiles
    !
    ?
    (
     l_OutFileName
     Msg
    )
   END
  else
   BEGIN
    32
    l_EtalonFileName
    l_OutFileName
    CopyFile
   END
  l_EtalonFileName
  DeleteEmptyFile
  l_OutFileName
  DeleteEmptyFile
 ; // VOID PROCEDURE Etalon.do
 
 INTEGER VAR g_EtalonLevel
 ARRAY VAR g_EtalonPath
 FILE VAR g_OutFile
 Etalon.ms.script.test
 DumpElement
 (
  nil
  g_OutFile
  pop:Word:SetValue
 )
 (
  0
  g_EtalonLevel
  pop:Word:SetValue
 )
 (
  ARRAY [
   0
  ]
  g_EtalonPath
  pop:Word:SetValue
 )
 Etalon
 (
  script:FileName
  sysutils:ExtractFileName
 )
 Etalon
 (
  1
  2
  +
 )
 Etalon
 'Hello world'
 Etalon
 NOP
 Etalon
 ARRAY [
 ]
 Etalon
 1
 Etalon
 'Another string'
 Etalon
 ''
 Etalon
 (
  'Root'
  Etalon
  'Nested1'
  Etalon
  'Nested2'
  Etalon
  'Nested3'
 )
; // VOID TestWithDump Etalon.ms.script.test

