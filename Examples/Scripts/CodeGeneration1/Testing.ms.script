// Testing.ms.script

USES
 implementation.ms.dict
 Testing.ms.dict
 params.ms.dict
;

Test TestingTest

STRING FUNCTION (+)?
 STRING in aPrefix
 STRING right aSuffix
 %SUMMARY 'Если aSuffix не пустой, то возвращает сумму aPrefix и aSuffix, иначе возвращает пустую строку' ;
 Result := ''
 STRING VAR l_Suffix
 aSuffix =: l_Suffix
 if ( l_Suffix =/= '' ) then
  ( aPrefix l_Suffix Cat =: Result )
; // (+)?

CONST cTests 'Tests:'

MACRO Tests
 Literal IN aName
 [
   'VOID axiom:operator'
   cTests aName |N Cat
 ] Ctx:Parser:PushArray
; // Tests

Tests (+)?
  Test T1 '' (+)? 'B' Print ;
  Test T2 'A' (+)? 'B' Print ;
  Test T3 'A' (+)? '' Print ;
; // Tests (+)?

VOID operator RunTests
 Literal IN aName
 STRING VAR l_Name
 cTests aName |N Cat >>> l_Name
 l_Name Print
; // RunTests

RunTests (+)?

USES
 CodeDump.ms.dict
;

@SELF DumpElement

; // TestingTest

TestingTest