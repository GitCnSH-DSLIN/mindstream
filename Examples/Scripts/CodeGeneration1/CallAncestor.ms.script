PROGRAM CallAncestor.ms.script

USES
 classRelations.ms.dict
;

USES
 WordsRTTI.ms.dict
;

USES
 Testing.ms.dict
;

Test&Dump CallAncestorTest

 MACRO .call.ancestor
  STRING VAR l_WordName
  Ctx:KeyWordDefiningNow pop:KeyWord:Name >>> l_WordName
  l_WordName IsNil ! ?ASSURE [ 'No name for word calling ' @SELF pop:Word:Name ]

  TtfwWord VAR l_WordParent
  Ctx:WordDefiningNow pop:Word:Parent >>> l_WordParent
  l_WordParent IsNil ! ?ASSURE [ 'No parent for ' l_WordName ]

  TtfwWord VAR l_FoundWord
  nil >>> l_FoundWord

  l_WordParent .Inherited.Words .for> ( 
   TtfwWord IN l_Ancestor

   TtfwWord VAR l_AncestorMember 
   l_Ancestor %% l_WordName >>> l_AncestorMember
   if ( l_AncestorMember IsNil ! ) then
   begin
    l_FoundWord IsNil ?ASSURE [ 'Method ' l_WordName ' was already found in ' l_FoundWord pop:Word:Parent pop:Word:Name ]
    l_AncestorMember >>> l_FoundWord
   end // l_AncestorMember IsNil !
  ) // l_WordParent .Inherited.Words .for>
 ; // .call.ancestor

 : A
  : X
    INTEGER IN aValue
   aValue 1 +
  ; // X
 ; // A

 : B Inherits A
  : X
    INTEGER IN aValue
   aValue 2 + .call.ancestor A :: X
  ; // X
 ; // B

 1 A :: X .
 2 B :: X .

; // CallAncestorTest

CallAncestorTest
