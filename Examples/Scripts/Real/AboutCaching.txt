О кешировании.</br>

"Предыдущая" серия была тут - http://programmingmindstream.blogspot.ru/2015/12/1145.html</br>

Теперь хотелось бы поговорить о кешировании значений функций.</br>

Для понимания всего написанного неплохо бы ознакомиться с https://ru.wikipedia.org/wiki/%D0%A4%D0%BE%D1%80%D1%82_(%D1%8F%D0%B7%D1%8B%D0%BA_%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F).</br>

У нас все элементы, что "модели", что вообще говоря "словаря скриптовой машины" выглядят примерно так:</br>

<pre class=brush:delphi>
: OuterElement1
 CONST Const1 Value1
 ...
 CONST ConstN ValueN

 VAR Var1
 ...
 VAR VarN

 : InnerElement1
  InnerElementCode1
 ; // InnerElement1
 ...
 : InnerElementN
  InnerElementCodeN
 ; // InnerElementN

 OuterElementCode1
; // OuterElement1
...
: OuterElementN
 CONST Const1 Value1
 ...
 CONST ConstN ValueN

 VAR Var1
 ...
 VAR VarN

 : InnerElement1
  InnerElementCode1
 ; // InnerElement1
 ...
 : InnerElementN
  InnerElementCodeN
 ; // InnerElementN

 OuterElementCodeN
; // OuterElementN
</pre>

Что тут написано?</br>

Договоримся для начала, что "элемент словаря" и "слово" - это ТОЖДЕСТВЕННЫЕ понятия, если другое не оговорено особо.</br>

: - определяет новый элемент словаря.</br>
CONST - определяет константу внутри элемента словаря.</br>
VAR - определяет переменную внутри элемента словаря.</br>
[XXX]ElementCode[YYY] - "код" слова, который будет выполнен при "вызове" слова.</br>

Далее.</br>

Давайте для начала разберёмся с "кодом слова".</br>

Пусть есть пример:</br>

<pre class=brush:delphi>
: A
 1
; // A

A Print
</pre>

Что он сделает?</br>

Он вызовет "код слова" A, который в данном случае равен "1 Print"</br>

