<div dir="ltr" style="text-align: left;" trbidi="on">
О кешировании. Вводная.<br />
<br />
"Предыдущая" серия была тут - <a href="http://programmingmindstream.blogspot.ru/2015/12/1145.html">http://programmingmindstream.blogspot.ru/2015/12/1145.html</a><br />
<br />
Теперь хотелось бы поговорить о кешировании значений функций.<br />
<br />
Для понимания всего написанного далее неплохо было бы ознакомиться с <a href="https://ru.wikipedia.org/wiki/%D0%A4%D0%BE%D1%80%D1%82_(%D1%8F%D0%B7%D1%8B%D0%BA_%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F)">https://ru.wikipedia.org/wiki/%D0%A4%D0%BE%D1%80%D1%82_(%D1%8F%D0%B7%D1%8B%D0%BA_%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F)</a>.<br />
<br />
У нас все элементы, что "модели", что вообще говоря "словаря скриптовой машины" выглядят примерно так:<br />
<br />
<pre class="brush:delphi">: OuterElement1
 CONST Const1 Value1
 ...
 CONST ConstN ValueN

 VAR Var1
 ...
 VAR VarN

 : InnerElement1
  InnerElementCode1
 ; // InnerElement1
 ...
 : InnerElementN
  InnerElementCodeN
 ; // InnerElementN

 OuterElementCode1
; // OuterElement1
...
: OuterElementN
 CONST Const1 Value1
 ...
 CONST ConstN ValueN

 VAR Var1
 ...
 VAR VarN

 : InnerElement1
  InnerElementCode1
 ; // InnerElement1
 ...
 : InnerElementN
  InnerElementCodeN
 ; // InnerElementN

 OuterElementCodeN
; // OuterElementN
</pre>
<br />
Что тут написано?<br />
<br />
Договоримся для начала, что "элемент словаря" и "слово" - это ТОЖДЕСТВЕННЫЕ понятия, если другое не оговорено особо.<br />
<br />
<b>:</b> - определяет новый элемент словаря (который может снимать со стека сколько угодно значений и класть на стек так же сколько угодно значений).<br />
<br />
<b>CONST</b> - определяет константу внутри элемента словаря.<br />
<br />
<b>VAR</b> - определяет переменную внутри элемента словаря.<br />
<br />
[XXX]<b>ElementCode</b>[YYY] - "код" слова, который будет выполнен при "вызове" слова.<br />
<br />
<b>;</b> - завершает определение слова.<br />
<br />
Далее.<br />
<br />
Давайте для начала разберёмся с "<b>кодом слова</b>".<br />
<br />
Пусть есть пример:<br />
<br />
<pre class="brush:delphi">: A
 1
; // A

A Print
</pre>
<br />
Что он сделает?<br />
<br />
Он вызовет "код слова" A, который в данном случае равен "1"<br />
<br />
Что мы в итоге получим?<br />
<br />
Мы получим то, что в консоль выведется целочисленное значение "1".<br />
<br />
Как это происходит?<br />
<br />
Сначала конструкция ": A" - определит в словаре слово A.<br />
<br />
Потом конструкция "1" - определит "код слова A" который будет уметь класть значение "1" на стек.<br />
<br />
Потом конструкция "A Print" - вызовет сначала слово A (которое положит на стек значение "1"), а потом слово Print (которое возьмёт со стека значение "1" и напечатает его в консоль).<br />
<br />
Теперь поговорим о <b>константах</b>.<br />
<br />
Константы у нас, как и в любых других (известных мне) языках программирования, это просто именованные неизменяемые значения.<br />
<br />
Перепишем наш пример:<br />
<br />
<pre class="brush:delphi">: A
 CONST One 1
 One
; // A

A Print
</pre>
<br />
Что тут происходит?<br />
<br />
Ну вообще говоря - код делает то же самое, что и в предыдущем примере. А именно - выводит в консоль целочисленное значение "1".<br />
<br />
Что изменилось?<br />
<br />
Мы, вместо того, чтобы "напрямую" обращаться к значению "1" - ввели константу - "One", которая представляет собой значение "1".<br />
<br />
И далее "код слова" A изменился с "1" на "One".<br />
<br />
Слово "One" так же как и слово "1" кладёт на стек значение "1".<br />
<br />
То есть константа "One" является как бы псевдонимом к значению "1".<br />
<br />
Ну и понятно, что можно написать так:<br />
<br />
<pre class="brush:delphi">: A
 CONST One 1
 CONST OneAlias One
 OneAlias
; // A

A Print
</pre>
<br />
Хотя это на самом деле и не очевидно.<br />
<br />
Надеюсь тут всё понятно.<br />
<br />
Пойдём далее.<br />
<br />
Поговорим о <b>переменных</b>.<br />
<br />
Переменные у нас, как и в любом другом (известном мне) языке программирования - это "именованные ячейки памяти", которые могут содержать вычисленные значения.<br />
<br />
Эти "ячейки памяти" могут изменяться по ходу выполнения нашей программы.<br />
<br />
Как их можно использовать?<br />
<br />
Перепишем наш пример:<br />
<br />
<pre class="brush:delphi">: A
 VAR One
 // - тут мы объявили переменную One
 1 &gt;&gt;&gt; One
 // - тут мы присвоили переменной "One" значение "1"
 One
 // - тут кладём значение переменной One на стек
; // A

A Print
</pre>
<br />
Что делает этот пример?<br />
<br />
Да ровно то же самое, что и предыдущий - печатает целочисленное значение "1" в консоль.<br /><br/>
Но только пользуется для этих целей не константами, а переменными.<br/><br/>
</div>
