-2. Пример парсера лежит тут - mindstream\Scripting\Script.Parser.pas. Его надо брать за основу.
-1. Реализованный парсер конечно же есть. И не один. Но мы будем писать НОВЫЙ.Тому есть много ВЕСКИХ причин.
0. Токен - базовый элемент грамматики языка.
1. Все "токены" разделяются пробелами или табуляциями. Или новой строкой (#13#10 или #10 или #13). Пример:
 1. A B C - три токена - A B C
 2. A B + - три токена - A B +
 3. A B+ - два токена - A B+
 4. A+ B - два токена - A+ B
 5. A+B - один токен - A+B
1a. Сначала парсер бъёт входной поток по пробелам или новым строкам, а потом только анализирует содержимое полученных токенов.
2. Токен // - определяет строковый комментарий. Парсер должен пропустить все символы от // до конца строки (#13#10 или #10 или #13).
3. Токен /* - определяет блочный комментарий. Парсер должен пропустить все символы от /* до */.
4. Токен false - представляет собой булевское значение false.
5. Токен true - представляет собой булевское значение true.
6. Конструкция вида [x] далее означает повторение значения x от 0 до N. Где x - может принимать ЛЮБОЕ значение. К токенам это не относится. Это скажем так - мета-язык для описания токенов.
6a. Также договоримся, что a - это символ, а N - цифра.
7. Токен вида '[a]' - представляет собою строку. a - может быть ЛЮБЫМ сиволом кроме ', включая #13 и 10. Пример:
 1. 'abc' - строка abc.
 2. 'abc d' - строка abc d.
 3. 'ab
 c' - строка abc#13#10c.
8. Поддчеркну! Строки бывают МНОГОСТРОЧНЫМИ. Как в примере 7.3.
9. Токен вида [[#[N]]['[a]'][#[N]]] - также даёт строку. Пример:
 1. #12#13#14 - даёт строку #12#13#14.
 2. #12#13#14'a' - даёт строку #12#13#14a.
 3. #12#13#14'ab' - даёт строку #12#13#14ab.
 3. #12#13#14'ab'#15 - даёт строку #12#13#14ab#15.
 4. #12#13#14'ab'#15'cd' - даёт строку #12#13#14ab#15cd.
10. Токен вида '[''][a]['']' - даёт строку с кавычками. Примеры:
 1. '''' - даёт строку '.
 2. '''''' - даёт строку ''.
 3. '''a''' - даёт строку 'a'.
 4. 'a''' - даёт строку a'.
 5. '''a' - даёт строку 'a.
11. Договоримся, что конструкция вида (x) - далее означает повторение значения x от 1 до N.
12. Токен вида (N) - даёт НЕОТРИЦАТЕЛЬНОЕ число. Пример:
 1. 1 - число 1.
 2. 2 - число 2.
 3. 0 - число 0.
 4. 20 - число 20.
 5. 200 - число 200.
13. Токен вида -(N) - даёт НЕПОЛОЖИТЕЛЬНОЕ число. Пример:
 1. -1 - число -1.
 2. -2 - число -2.
 3. -0 - число 0.
 4. -20 - число -20.
 5. -200 - число -200.
14. Токен вида $(H) (где H шестнадцатиричная цифра от 0 до F) - даёт НЕОТРИЦАТЕЛЬНОЕ шестнадцаттричное число. Пример:
 1. $0 - число 0.
 2. $1 - число 1.
 3. $2 - число 2.
 4. $A - число 10.
 5. $F - число 15.
 6. $10 - число 16.
 7. $FF - число 255.
15. Токен вида #$(H) - даёт символ в шестнадцатиричном представлении. Ну и далее по индукции со строками. Пример:
 1. #$0 - строка 0.
 2. #$A - строка #10.
 3. #$D - строка #13.
 4. #$D'a' - строка #13a.
 5. 'a'#$D - строка a#13.
 6. ''''#$D - строка '#13.
 7. #$D'''' - строка #13'.